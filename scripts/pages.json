[{"name":"COMPLETED","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.COMPLETED","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["COMPLETED","COMPLETED","com.innopolis.innoqueue.domain.notification.enums.NotificationType.COMPLETED"]},{"name":"DELETE_QUEUE","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.DELETE_QUEUE","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-d-e-l-e-t-e_-q-u-e-u-e/index.html","searchKeys":["DELETE_QUEUE","DELETE_QUEUE","com.innopolis.innoqueue.domain.notification.enums.NotificationType.DELETE_QUEUE"]},{"name":"FROZEN","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.FROZEN","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-f-r-o-z-e-n/index.html","searchKeys":["FROZEN","FROZEN","com.innopolis.innoqueue.domain.notification.enums.NotificationType.FROZEN"]},{"name":"JOINED_QUEUE","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.JOINED_QUEUE","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-j-o-i-n-e-d_-q-u-e-u-e/index.html","searchKeys":["JOINED_QUEUE","JOINED_QUEUE","com.innopolis.innoqueue.domain.notification.enums.NotificationType.JOINED_QUEUE"]},{"name":"LEFT_QUEUE","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.LEFT_QUEUE","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-l-e-f-t_-q-u-e-u-e/index.html","searchKeys":["LEFT_QUEUE","LEFT_QUEUE","com.innopolis.innoqueue.domain.notification.enums.NotificationType.LEFT_QUEUE"]},{"name":"OTHER","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.OTHER","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-o-t-h-e-r/index.html","searchKeys":["OTHER","OTHER","com.innopolis.innoqueue.domain.notification.enums.NotificationType.OTHER"]},{"name":"SHOOK","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.SHOOK","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-s-h-o-o-k/index.html","searchKeys":["SHOOK","SHOOK","com.innopolis.innoqueue.domain.notification.enums.NotificationType.SHOOK"]},{"name":"SKIPPED","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.SKIPPED","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-s-k-i-p-p-e-d/index.html","searchKeys":["SKIPPED","SKIPPED","com.innopolis.innoqueue.domain.notification.enums.NotificationType.SKIPPED"]},{"name":"UNFROZEN","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.UNFROZEN","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-u-n-f-r-o-z-e-n/index.html","searchKeys":["UNFROZEN","UNFROZEN","com.innopolis.innoqueue.domain.notification.enums.NotificationType.UNFROZEN"]},{"name":"UPDATE","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.UPDATE","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-u-p-d-a-t-e/index.html","searchKeys":["UPDATE","UPDATE","com.innopolis.innoqueue.domain.notification.enums.NotificationType.UPDATE"]},{"name":"YOUR_TURN","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.YOUR_TURN","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/-y-o-u-r_-t-u-r-n/index.html","searchKeys":["YOUR_TURN","YOUR_TURN","com.innopolis.innoqueue.domain.notification.enums.NotificationType.YOUR_TURN"]},{"name":"abstract class NotificationSenderServiceAbstract(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, obligatoryNotifications: List<NotificationType>) : NotificationSenderService","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/index.html","searchKeys":["NotificationSenderServiceAbstract","abstract class NotificationSenderServiceAbstract(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, obligatoryNotifications: List<NotificationType>) : NotificationSenderService","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract"]},{"name":"abstract fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/subscribed.html","searchKeys":["subscribed","abstract fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.subscribed"]},{"name":"abstract fun anyNewNotification(token: String): NewNotificationDto","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService.anyNewNotification","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/any-new-notification.html","searchKeys":["anyNewNotification","abstract fun anyNewNotification(token: String): NewNotificationDto","com.innopolis.innoqueue.domain.notification.service.NotificationsListService.anyNewNotification"]},{"name":"abstract fun anyUnreadNotification(token: String): Boolean","description":"com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.anyUnreadNotification","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dao/-notification-repository/any-unread-notification.html","searchKeys":["anyUnreadNotification","abstract fun anyUnreadNotification(token: String): Boolean","com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.anyUnreadNotification"]},{"name":"abstract fun clearExpiredInviteCodes(): EmptyDto","description":"com.innopolis.innoqueue.domain.external.service.DatabaseService.clearExpiredInviteCodes","location":"innoqueue/com.innopolis.innoqueue.domain.external.service/-database-service/clear-expired-invite-codes.html","searchKeys":["clearExpiredInviteCodes","abstract fun clearExpiredInviteCodes(): EmptyDto","com.innopolis.innoqueue.domain.external.service.DatabaseService.clearExpiredInviteCodes"]},{"name":"abstract fun clearOldNotifications(): EmptyDto","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService.clearOldNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/clear-old-notifications.html","searchKeys":["clearOldNotifications","abstract fun clearOldNotifications(): EmptyDto","com.innopolis.innoqueue.domain.notification.service.NotificationsListService.clearOldNotifications"]},{"name":"abstract fun completeTask(token: String, taskId: Long, expenses: Long?)","description":"com.innopolis.innoqueue.domain.queue.service.ToDoTaskService.completeTask","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-to-do-task-service/complete-task.html","searchKeys":["completeTask","abstract fun completeTask(token: String, taskId: Long, expenses: Long?)","com.innopolis.innoqueue.domain.queue.service.ToDoTaskService.completeTask"]},{"name":"abstract fun createNewUser(userName: String, fcmToken: String): TokenDto","description":"com.innopolis.innoqueue.domain.user.service.UserService.createNewUser","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/create-new-user.html","searchKeys":["createNewUser","abstract fun createNewUser(userName: String, fcmToken: String): TokenDto","com.innopolis.innoqueue.domain.user.service.UserService.createNewUser"]},{"name":"abstract fun createQueue(token: String, queue: NewQueueDto): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.createQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/create-queue.html","searchKeys":["createQueue","abstract fun createQueue(token: String, queue: NewQueueDto): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.QueueService.createQueue"]},{"name":"abstract fun deleteNotificationById(token: String, notificationId: Long)","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService.deleteNotificationById","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/delete-notification-by-id.html","searchKeys":["deleteNotificationById","abstract fun deleteNotificationById(token: String, notificationId: Long)","com.innopolis.innoqueue.domain.notification.service.NotificationsListService.deleteNotificationById"]},{"name":"abstract fun deleteNotifications(token: String, notificationIds: List<Long>? = null)","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService.deleteNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/delete-notifications.html","searchKeys":["deleteNotifications","abstract fun deleteNotifications(token: String, notificationIds: List<Long>? = null)","com.innopolis.innoqueue.domain.notification.service.NotificationsListService.deleteNotifications"]},{"name":"abstract fun deleteQueue(token: String, queueId: Long)","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.deleteQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/delete-queue.html","searchKeys":["deleteQueue","abstract fun deleteQueue(token: String, queueId: Long)","com.innopolis.innoqueue.domain.queue.service.QueueService.deleteQueue"]},{"name":"abstract fun editQueue(token: String, queueId: Long, editQueue: EditQueueDto): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.editQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/edit-queue.html","searchKeys":["editQueue","abstract fun editQueue(token: String, queueId: Long, editQueue: EditQueueDto): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.QueueService.editQueue"]},{"name":"abstract fun findAllByToken(token: String): List<Notification>","description":"com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.findAllByToken","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dao/-notification-repository/find-all-by-token.html","searchKeys":["findAllByToken","abstract fun findAllByToken(token: String): List<Notification>","com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.findAllByToken"]},{"name":"abstract fun findAllByToken(token: String, pageable: Pageable): Page<Notification>","description":"com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.findAllByToken","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dao/-notification-repository/find-all-by-token.html","searchKeys":["findAllByToken","abstract fun findAllByToken(token: String, pageable: Pageable): Page<Notification>","com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.findAllByToken"]},{"name":"abstract fun findAllExpiredNotifications(): List<Notification>","description":"com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.findAllExpiredNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dao/-notification-repository/find-all-expired-notifications.html","searchKeys":["findAllExpiredNotifications","abstract fun findAllExpiredNotifications(): List<Notification>","com.innopolis.innoqueue.domain.notification.dao.NotificationRepository.findAllExpiredNotifications"]},{"name":"abstract fun findAllUserQueueByToken(token: String): List<UserQueuesShortForm>","description":"com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findAllUserQueueByToken","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.dao/-user-queue-repository/find-all-user-queue-by-token.html","searchKeys":["findAllUserQueueByToken","abstract fun findAllUserQueueByToken(token: String): List<UserQueuesShortForm>","com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findAllUserQueueByToken"]},{"name":"abstract fun findPinCodes(): List<String>","description":"com.innopolis.innoqueue.domain.queue.dao.QueueRepository.findPinCodes","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao/-queue-repository/find-pin-codes.html","searchKeys":["findPinCodes","abstract fun findPinCodes(): List<String>","com.innopolis.innoqueue.domain.queue.dao.QueueRepository.findPinCodes"]},{"name":"abstract fun findQrCodes(): List<String>","description":"com.innopolis.innoqueue.domain.queue.dao.QueueRepository.findQrCodes","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao/-queue-repository/find-qr-codes.html","searchKeys":["findQrCodes","abstract fun findQrCodes(): List<String>","com.innopolis.innoqueue.domain.queue.dao.QueueRepository.findQrCodes"]},{"name":"abstract fun findQueueParticipants(queueId: Long): List<QueueParticipants>","description":"com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findQueueParticipants","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.dao/-user-queue-repository/find-queue-participants.html","searchKeys":["findQueueParticipants","abstract fun findQueueParticipants(queueId: Long): List<QueueParticipants>","com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findQueueParticipants"]},{"name":"abstract fun findToDoTasks(token: String): List<QueueAndUserQueue>","description":"com.innopolis.innoqueue.domain.queue.dao.QueueRepository.findToDoTasks","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao/-queue-repository/find-to-do-tasks.html","searchKeys":["findToDoTasks","abstract fun findToDoTasks(token: String): List<QueueAndUserQueue>","com.innopolis.innoqueue.domain.queue.dao.QueueRepository.findToDoTasks"]},{"name":"abstract fun findTokensForUser(userId: Long): List<String>","description":"com.innopolis.innoqueue.domain.fcmtoken.service.FcmTokenService.findTokensForUser","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service/-fcm-token-service/find-tokens-for-user.html","searchKeys":["findTokensForUser","abstract fun findTokensForUser(userId: Long): List<String>","com.innopolis.innoqueue.domain.fcmtoken.service.FcmTokenService.findTokensForUser"]},{"name":"abstract fun findUserById(userId: Long): User?","description":"com.innopolis.innoqueue.domain.user.service.UserService.findUserById","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/find-user-by-id.html","searchKeys":["findUserById","abstract fun findUserById(userId: Long): User?","com.innopolis.innoqueue.domain.user.service.UserService.findUserById"]},{"name":"abstract fun findUserByToken(token: String): User","description":"com.innopolis.innoqueue.domain.user.service.UserService.findUserByToken","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/find-user-by-token.html","searchKeys":["findUserByToken","abstract fun findUserByToken(token: String): User","com.innopolis.innoqueue.domain.user.service.UserService.findUserByToken"]},{"name":"abstract fun findUserByToken(token: String): User?","description":"com.innopolis.innoqueue.domain.user.dao.UserRepository.findUserByToken","location":"innoqueue/com.innopolis.innoqueue.domain.user.dao/-user-repository/find-user-by-token.html","searchKeys":["findUserByToken","abstract fun findUserByToken(token: String): User?","com.innopolis.innoqueue.domain.user.dao.UserRepository.findUserByToken"]},{"name":"abstract fun findUserNameById(userId: Long): String?","description":"com.innopolis.innoqueue.domain.user.service.UserService.findUserNameById","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/find-user-name-by-id.html","searchKeys":["findUserNameById","abstract fun findUserNameById(userId: Long): String?","com.innopolis.innoqueue.domain.user.service.UserService.findUserNameById"]},{"name":"abstract fun findUserQueue(token: String, queueId: Long): UserQueueAndQueue","description":"com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findUserQueue","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.dao/-user-queue-repository/find-user-queue.html","searchKeys":["findUserQueue","abstract fun findUserQueue(token: String, queueId: Long): UserQueueAndQueue","com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findUserQueue"]},{"name":"abstract fun findUserQueueByQueueId(queueId: Long): List<UserQueue>","description":"com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findUserQueueByQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.dao/-user-queue-repository/find-user-queue-by-queue-id.html","searchKeys":["findUserQueueByQueueId","abstract fun findUserQueueByQueueId(queueId: Long): List<UserQueue>","com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findUserQueueByQueueId"]},{"name":"abstract fun findUserQueueByToken(token: String, queueId: Long): UserQueue?","description":"com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findUserQueueByToken","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.dao/-user-queue-repository/find-user-queue-by-token.html","searchKeys":["findUserQueueByToken","abstract fun findUserQueueByToken(token: String, queueId: Long): UserQueue?","com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository.findUserQueueByToken"]},{"name":"abstract fun freezeUnFreezeQueue(token: String, queueId: Long, status: Boolean)","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.freezeUnFreezeQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/freeze-un-freeze-queue.html","searchKeys":["freezeUnFreezeQueue","abstract fun freezeUnFreezeQueue(token: String, queueId: Long, status: Boolean)","com.innopolis.innoqueue.domain.queue.service.QueueService.freezeUnFreezeQueue"]},{"name":"abstract fun getColor(): String","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getColor","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/get-color.html","searchKeys":["getColor","abstract fun getColor(): String","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getColor"]},{"name":"abstract fun getCompletes(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getCompletes","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-completes.html","searchKeys":["getCompletes","abstract fun getCompletes(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getCompletes"]},{"name":"abstract fun getCurrentUserId(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getCurrentUserId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-current-user-id.html","searchKeys":["getCurrentUserId","abstract fun getCurrentUserId(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getCurrentUserId"]},{"name":"abstract fun getDateJoined(): LocalDateTime","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getDateJoined","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/get-date-joined.html","searchKeys":["getDateJoined","abstract fun getDateJoined(): LocalDateTime","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getDateJoined"]},{"name":"abstract fun getExpenses(): Double","description":"com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-queue-participants/get-expenses.html","searchKeys":["getExpenses","abstract fun getExpenses(): Double","com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getExpenses"]},{"name":"abstract fun getExpenses(): Double","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-expenses.html","searchKeys":["getExpenses","abstract fun getExpenses(): Double","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getExpenses"]},{"name":"abstract fun getHost(): HostDto","description":"com.innopolis.innoqueue.domain.external.service.DatabaseService.getHost","location":"innoqueue/com.innopolis.innoqueue.domain.external.service/-database-service/get-host.html","searchKeys":["getHost","abstract fun getHost(): HostDto","com.innopolis.innoqueue.domain.external.service.DatabaseService.getHost"]},{"name":"abstract fun getIsActive(): Boolean","description":"com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getIsActive","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-queue-participants/get-is-active.html","searchKeys":["getIsActive","abstract fun getIsActive(): Boolean","com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getIsActive"]},{"name":"abstract fun getIsActive(): Boolean","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getIsActive","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-is-active.html","searchKeys":["getIsActive","abstract fun getIsActive(): Boolean","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getIsActive"]},{"name":"abstract fun getIsActive(): Boolean","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getIsActive","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/get-is-active.html","searchKeys":["getIsActive","abstract fun getIsActive(): Boolean","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getIsActive"]},{"name":"abstract fun getIsImportant(): Boolean","description":"com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getIsImportant","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue-and-user-queue/get-is-important.html","searchKeys":["getIsImportant","abstract fun getIsImportant(): Boolean","com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getIsImportant"]},{"name":"abstract fun getNotifications(token: String, pageable: Pageable): Page<NotificationDto>","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService.getNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/get-notifications.html","searchKeys":["getNotifications","abstract fun getNotifications(token: String, pageable: Pageable): Page<NotificationDto>","com.innopolis.innoqueue.domain.notification.service.NotificationsListService.getNotifications"]},{"name":"abstract fun getOnDutyUserName(): String","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getOnDutyUserName","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/get-on-duty-user-name.html","searchKeys":["getOnDutyUserName","abstract fun getOnDutyUserName(): String","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getOnDutyUserName"]},{"name":"abstract fun getProgress(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getProgress","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-progress.html","searchKeys":["getProgress","abstract fun getProgress(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getProgress"]},{"name":"abstract fun getQueueById(token: String, queueId: Long): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.getQueueById","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/get-queue-by-id.html","searchKeys":["getQueueById","abstract fun getQueueById(token: String, queueId: Long): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.QueueService.getQueueById"]},{"name":"abstract fun getQueueColor(): String","description":"com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getQueueColor","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue-and-user-queue/get-queue-color.html","searchKeys":["getQueueColor","abstract fun getQueueColor(): String","com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getQueueColor"]},{"name":"abstract fun getQueueId(): Long","description":"com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue-and-user-queue/get-queue-id.html","searchKeys":["getQueueId","abstract fun getQueueId(): Long","com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getQueueId"]},{"name":"abstract fun getQueueId(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-queue-id.html","searchKeys":["getQueueId","abstract fun getQueueId(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getQueueId"]},{"name":"abstract fun getQueueId(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/get-queue-id.html","searchKeys":["getQueueId","abstract fun getQueueId(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getQueueId"]},{"name":"abstract fun getQueueInviteCode(token: String, queueId: Long): QueueInviteCodeDto","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.getQueueInviteCode","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/get-queue-invite-code.html","searchKeys":["getQueueInviteCode","abstract fun getQueueInviteCode(token: String, queueId: Long): QueueInviteCodeDto","com.innopolis.innoqueue.domain.queue.service.QueueService.getQueueInviteCode"]},{"name":"abstract fun getQueueName(): String","description":"com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getQueueName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue-and-user-queue/get-queue-name.html","searchKeys":["getQueueName","abstract fun getQueueName(): String","com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getQueueName"]},{"name":"abstract fun getQueueName(): String","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getQueueName","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/get-queue-name.html","searchKeys":["getQueueName","abstract fun getQueueName(): String","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm.getQueueName"]},{"name":"abstract fun getQueues(token: String, sortOption: String? = null): QueuesListDto","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.getQueues","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/get-queues.html","searchKeys":["getQueues","abstract fun getQueues(token: String, sortOption: String? = null): QueuesListDto","com.innopolis.innoqueue.domain.queue.service.QueueService.getQueues"]},{"name":"abstract fun getSkips(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getSkips","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-skips.html","searchKeys":["getSkips","abstract fun getSkips(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getSkips"]},{"name":"abstract fun getTitleBody(firebaseRecipients: FirebaseRecipients, isPersonal: Boolean): TitleBody","description":"com.innopolis.innoqueue.webclients.firebase.service.NotificationTextFormerService.getTitleBody","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service/-notification-text-former-service/get-title-body.html","searchKeys":["getTitleBody","abstract fun getTitleBody(firebaseRecipients: FirebaseRecipients, isPersonal: Boolean): TitleBody","com.innopolis.innoqueue.webclients.firebase.service.NotificationTextFormerService.getTitleBody"]},{"name":"abstract fun getToDoTasks(token: String): List<ToDoTaskDto>","description":"com.innopolis.innoqueue.domain.queue.service.ToDoTaskService.getToDoTasks","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-to-do-task-service/get-to-do-tasks.html","searchKeys":["getToDoTasks","abstract fun getToDoTasks(token: String): List<ToDoTaskDto>","com.innopolis.innoqueue.domain.queue.service.ToDoTaskService.getToDoTasks"]},{"name":"abstract fun getTrackExpenses(): Boolean","description":"com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getTrackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue-and-user-queue/get-track-expenses.html","searchKeys":["getTrackExpenses","abstract fun getTrackExpenses(): Boolean","com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue.getTrackExpenses"]},{"name":"abstract fun getTrackExpenses(): Boolean","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getTrackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-track-expenses.html","searchKeys":["getTrackExpenses","abstract fun getTrackExpenses(): Boolean","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getTrackExpenses"]},{"name":"abstract fun getUserId(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getUserId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-queue-participants/get-user-id.html","searchKeys":["getUserId","abstract fun getUserId(): Long","com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getUserId"]},{"name":"abstract fun getUserId(): Long","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getUserId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/get-user-id.html","searchKeys":["getUserId","abstract fun getUserId(): Long","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue.getUserId"]},{"name":"abstract fun getUserName(): String","description":"com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getUserName","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-queue-participants/get-user-name.html","searchKeys":["getUserName","abstract fun getUserName(): String","com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants.getUserName"]},{"name":"abstract fun getUserQueueByQueueId(user: User, queueId: Long): UserQueue","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.getUserQueueByQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/get-user-queue-by-queue-id.html","searchKeys":["getUserQueueByQueueId","abstract fun getUserQueueByQueueId(user: User, queueId: Long): UserQueue","com.innopolis.innoqueue.domain.queue.service.QueueService.getUserQueueByQueueId"]},{"name":"abstract fun getUserSettings(token: String): UserDto","description":"com.innopolis.innoqueue.domain.user.service.UserService.getUserSettings","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/get-user-settings.html","searchKeys":["getUserSettings","abstract fun getUserSettings(token: String): UserDto","com.innopolis.innoqueue.domain.user.service.UserService.getUserSettings"]},{"name":"abstract fun joinQueue(token: String, queueInviteCodeDTO: QueueInviteCodeDto): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.joinQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/join-queue.html","searchKeys":["joinQueue","abstract fun joinQueue(token: String, queueInviteCodeDTO: QueueInviteCodeDto): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.QueueService.joinQueue"]},{"name":"abstract fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/notification-type.html","searchKeys":["notificationType","abstract fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.notificationType"]},{"name":"abstract fun readNotifications(token: String, notificationIds: List<Long>? = null)","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService.readNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/read-notifications.html","searchKeys":["readNotifications","abstract fun readNotifications(token: String, notificationIds: List<Long>? = null)","com.innopolis.innoqueue.domain.notification.service.NotificationsListService.readNotifications"]},{"name":"abstract fun saveFcmToken(userId: Long, userFcmToken: String)","description":"com.innopolis.innoqueue.domain.fcmtoken.service.FcmTokenService.saveFcmToken","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service/-fcm-token-service/save-fcm-token.html","searchKeys":["saveFcmToken","abstract fun saveFcmToken(userId: Long, userFcmToken: String)","com.innopolis.innoqueue.domain.fcmtoken.service.FcmTokenService.saveFcmToken"]},{"name":"abstract fun sendFirebaseMessage(firebaseMessage: FirebaseMessage)","description":"com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingClient.sendFirebaseMessage","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service/-firebase-messaging-client/send-firebase-message.html","searchKeys":["sendFirebaseMessage","abstract fun sendFirebaseMessage(firebaseMessage: FirebaseMessage)","com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingClient.sendFirebaseMessage"]},{"name":"abstract fun sendNotificationMessage(notificationMessageDto: NotificationMessageDto)","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderService.sendNotificationMessage","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service/send-notification-message.html","searchKeys":["sendNotificationMessage","abstract fun sendNotificationMessage(notificationMessageDto: NotificationMessageDto)","com.innopolis.innoqueue.domain.notification.service.NotificationSenderService.sendNotificationMessage"]},{"name":"abstract fun sendNotificationsToFirebase(firebaseRecipients: FirebaseRecipients)","description":"com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingService.sendNotificationsToFirebase","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service/-firebase-messaging-service/send-notifications-to-firebase.html","searchKeys":["sendNotificationsToFirebase","abstract fun sendNotificationsToFirebase(firebaseRecipients: FirebaseRecipients)","com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingService.sendNotificationsToFirebase"]},{"name":"abstract fun shakeUser(token: String, queueId: Long)","description":"com.innopolis.innoqueue.domain.queue.service.QueueService.shakeUser","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/shake-user.html","searchKeys":["shakeUser","abstract fun shakeUser(token: String, queueId: Long)","com.innopolis.innoqueue.domain.queue.service.QueueService.shakeUser"]},{"name":"abstract fun skipTask(token: String, taskId: Long)","description":"com.innopolis.innoqueue.domain.queue.service.ToDoTaskService.skipTask","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-to-do-task-service/skip-task.html","searchKeys":["skipTask","abstract fun skipTask(token: String, taskId: Long)","com.innopolis.innoqueue.domain.queue.service.ToDoTaskService.skipTask"]},{"name":"abstract fun updateUserSettings(token: String, settings: UpdateUserDto): UserDto","description":"com.innopolis.innoqueue.domain.user.service.UserService.updateUserSettings","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/update-user-settings.html","searchKeys":["updateUserSettings","abstract fun updateUserSettings(token: String, settings: UpdateUserDto): UserDto","com.innopolis.innoqueue.domain.user.service.UserService.updateUserSettings"]},{"name":"class AssetLinksController(assetLinks: String? = null)","description":"com.innopolis.innoqueue.rest.AssetLinksController","location":"innoqueue/com.innopolis.innoqueue.rest/-asset-links-controller/index.html","searchKeys":["AssetLinksController","class AssetLinksController(assetLinks: String? = null)","com.innopolis.innoqueue.rest.AssetLinksController"]},{"name":"class BackendController(service: DatabaseService)","description":"com.innopolis.innoqueue.rest.v1.BackendController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-backend-controller/index.html","searchKeys":["BackendController","class BackendController(service: DatabaseService)","com.innopolis.innoqueue.rest.v1.BackendController"]},{"name":"class CompleteNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-complete-notification-sender-service-impl/index.html","searchKeys":["CompleteNotificationSenderServiceImpl","class CompleteNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl"]},{"name":"class DatabaseServiceImpl(queueRepository: QueueRepository, devHost: String? = null, prodHost: String? = null) : DatabaseService","description":"com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.external.service.impl/-database-service-impl/index.html","searchKeys":["DatabaseServiceImpl","class DatabaseServiceImpl(queueRepository: QueueRepository, devHost: String? = null, prodHost: String? = null) : DatabaseService","com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl"]},{"name":"class DeleteQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-delete-queue-notification-sender-service-impl/index.html","searchKeys":["DeleteQueueNotificationSenderServiceImpl","class DeleteQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl"]},{"name":"class FcmToken","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token/index.html","searchKeys":["FcmToken","class FcmToken","com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken"]},{"name":"class FcmTokenId : Serializable","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token-id/index.html","searchKeys":["FcmTokenId","class FcmTokenId : Serializable","com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId"]},{"name":"class FcmTokenServiceImpl(fcmTokenRepository: FcmTokenRepository) : FcmTokenService","description":"com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service.impl/-fcm-token-service-impl/index.html","searchKeys":["FcmTokenServiceImpl","class FcmTokenServiceImpl(fcmTokenRepository: FcmTokenRepository) : FcmTokenService","com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl"]},{"name":"class FirebaseConfiguration","description":"com.innopolis.innoqueue.configuration.FirebaseConfiguration","location":"innoqueue/com.innopolis.innoqueue.configuration/-firebase-configuration/index.html","searchKeys":["FirebaseConfiguration","class FirebaseConfiguration","com.innopolis.innoqueue.configuration.FirebaseConfiguration"]},{"name":"class FirebaseMessagingClientImpl(firebaseApp: FirebaseApp?) : FirebaseMessagingClient","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingClientImpl","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-firebase-messaging-client-impl/index.html","searchKeys":["FirebaseMessagingClientImpl","class FirebaseMessagingClientImpl(firebaseApp: FirebaseApp?) : FirebaseMessagingClient","com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingClientImpl"]},{"name":"class FirebaseMessagingServiceImpl(firebaseMessagingClient: FirebaseMessagingClient, notificationTextFormerService: NotificationTextFormerService) : FirebaseMessagingService","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingServiceImpl","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-firebase-messaging-service-impl/index.html","searchKeys":["FirebaseMessagingServiceImpl","class FirebaseMessagingServiceImpl(firebaseMessagingClient: FirebaseMessagingClient, notificationTextFormerService: NotificationTextFormerService) : FirebaseMessagingService","com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingServiceImpl"]},{"name":"class FreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-freeze-notification-sender-service-impl/index.html","searchKeys":["FreezeNotificationSenderServiceImpl","class FreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl"]},{"name":"class InnoQueueApplication","description":"com.innopolis.innoqueue.InnoQueueApplication","location":"innoqueue/com.innopolis.innoqueue/-inno-queue-application/index.html","searchKeys":["InnoQueueApplication","class InnoQueueApplication","com.innopolis.innoqueue.InnoQueueApplication"]},{"name":"class JoinQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-join-queue-notification-sender-service-impl/index.html","searchKeys":["JoinQueueNotificationSenderServiceImpl","class JoinQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl"]},{"name":"class LeaveQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-leave-queue-notification-sender-service-impl/index.html","searchKeys":["LeaveQueueNotificationSenderServiceImpl","class LeaveQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl"]},{"name":"class MaskingPatternLayout : PatternLayout","description":"com.innopolis.innoqueue.configuration.MaskingPatternLayout","location":"innoqueue/com.innopolis.innoqueue.configuration/-masking-pattern-layout/index.html","searchKeys":["MaskingPatternLayout","class MaskingPatternLayout : PatternLayout","com.innopolis.innoqueue.configuration.MaskingPatternLayout"]},{"name":"class NotSupportedMessageType(message: String) : RuntimeException","description":"com.innopolis.innoqueue.webclients.firebase.exception.NotSupportedMessageType","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.exception/-not-supported-message-type/index.html","searchKeys":["NotSupportedMessageType","class NotSupportedMessageType(message: String) : RuntimeException","com.innopolis.innoqueue.webclients.firebase.exception.NotSupportedMessageType"]},{"name":"class Notification","description":"com.innopolis.innoqueue.domain.notification.model.Notification","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/index.html","searchKeys":["Notification","class Notification","com.innopolis.innoqueue.domain.notification.model.Notification"]},{"name":"class NotificationTextFormerServiceImpl : NotificationTextFormerService","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.NotificationTextFormerServiceImpl","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-notification-text-former-service-impl/index.html","searchKeys":["NotificationTextFormerServiceImpl","class NotificationTextFormerServiceImpl : NotificationTextFormerService","com.innopolis.innoqueue.webclients.firebase.service.impl.NotificationTextFormerServiceImpl"]},{"name":"class NotificationsController(notificationsListService: NotificationsListService)","description":"com.innopolis.innoqueue.rest.v1.NotificationsController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/index.html","searchKeys":["NotificationsController","class NotificationsController(notificationsListService: NotificationsListService)","com.innopolis.innoqueue.rest.v1.NotificationsController"]},{"name":"class NotificationsListServiceImpl(userService: UserService, queueRepository: QueueRepository, notificationRepository: NotificationRepository) : NotificationsListService","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/index.html","searchKeys":["NotificationsListServiceImpl","class NotificationsListServiceImpl(userService: UserService, queueRepository: QueueRepository, notificationRepository: NotificationRepository) : NotificationsListService","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl"]},{"name":"class OtherNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-other-notification-sender-service-impl/index.html","searchKeys":["OtherNotificationSenderServiceImpl","class OtherNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl"]},{"name":"class Queue","description":"com.innopolis.innoqueue.domain.queue.model.Queue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/index.html","searchKeys":["Queue","class Queue","com.innopolis.innoqueue.domain.queue.model.Queue"]},{"name":"class QueueController(queueService: QueueService, toDoService: ToDoTaskService)","description":"com.innopolis.innoqueue.rest.v1.QueueController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/index.html","searchKeys":["QueueController","class QueueController(queueService: QueueService, toDoService: ToDoTaskService)","com.innopolis.innoqueue.rest.v1.QueueController"]},{"name":"class QueueInviteCodeDto(val pinCode: String?, val qrCode: String?)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-invite-code-dto/index.html","searchKeys":["QueueInviteCodeDto","class QueueInviteCodeDto(val pinCode: String?, val qrCode: String?)","com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto"]},{"name":"class QueuePinCodeExpiredSpecification(expiredDateTime: LocalDateTime) : Specification<Queue> ","description":"com.innopolis.innoqueue.domain.queue.dao.specification.QueuePinCodeExpiredSpecification","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao.specification/-queue-pin-code-expired-specification/index.html","searchKeys":["QueuePinCodeExpiredSpecification","class QueuePinCodeExpiredSpecification(expiredDateTime: LocalDateTime) : Specification<Queue> ","com.innopolis.innoqueue.domain.queue.dao.specification.QueuePinCodeExpiredSpecification"]},{"name":"class QueueQrCodeExpiredSpecification(expiredDateTime: LocalDateTime) : Specification<Queue> ","description":"com.innopolis.innoqueue.domain.queue.dao.specification.QueueQrCodeExpiredSpecification","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao.specification/-queue-qr-code-expired-specification/index.html","searchKeys":["QueueQrCodeExpiredSpecification","class QueueQrCodeExpiredSpecification(expiredDateTime: LocalDateTime) : Specification<Queue> ","com.innopolis.innoqueue.domain.queue.dao.specification.QueueQrCodeExpiredSpecification"]},{"name":"class QueueServiceImpl(userService: UserService, unfreezeNotificationSenderServiceImpl: NotificationSenderService, freezeNotificationSenderServiceImpl: NotificationSenderService, deleteQueueNotificationSenderServiceImpl: NotificationSenderService, leaveQueueNotificationSenderServiceImpl: NotificationSenderService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, joinQueueNotificationSenderServiceImpl: NotificationSenderService, shakeNotificationSenderServiceImpl: NotificationSenderService, userQueueRepository: UserQueueRepository, queueRepository: QueueRepository) : QueueService","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/index.html","searchKeys":["QueueServiceImpl","class QueueServiceImpl(userService: UserService, unfreezeNotificationSenderServiceImpl: NotificationSenderService, freezeNotificationSenderServiceImpl: NotificationSenderService, deleteQueueNotificationSenderServiceImpl: NotificationSenderService, leaveQueueNotificationSenderServiceImpl: NotificationSenderService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, joinQueueNotificationSenderServiceImpl: NotificationSenderService, shakeNotificationSenderServiceImpl: NotificationSenderService, userQueueRepository: UserQueueRepository, queueRepository: QueueRepository) : QueueService","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl"]},{"name":"class QueueShortDto(val queueId: Long, val queueName: String, val queueColor: String, val onDutyUserName: String, val active: Boolean)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/index.html","searchKeys":["QueueShortDto","class QueueShortDto(val queueId: Long, val queueName: String, val queueColor: String, val onDutyUserName: String, val active: Boolean)","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto"]},{"name":"class RequestLoggingFilterConfig","description":"com.innopolis.innoqueue.configuration.RequestLoggingFilterConfig","location":"innoqueue/com.innopolis.innoqueue.configuration/-request-logging-filter-config/index.html","searchKeys":["RequestLoggingFilterConfig","class RequestLoggingFilterConfig","com.innopolis.innoqueue.configuration.RequestLoggingFilterConfig"]},{"name":"class ShakeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-shake-notification-sender-service-impl/index.html","searchKeys":["ShakeNotificationSenderServiceImpl","class ShakeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl"]},{"name":"class SkipNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-skip-notification-sender-service-impl/index.html","searchKeys":["SkipNotificationSenderServiceImpl","class SkipNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl"]},{"name":"class StringGenerator(stringLength: Int, excludedStrings: List<String> = emptyList())","description":"com.innopolis.innoqueue.domain.util.StringGenerator","location":"innoqueue/com.innopolis.innoqueue.domain.util/-string-generator/index.html","searchKeys":["StringGenerator","class StringGenerator(stringLength: Int, excludedStrings: List<String> = emptyList())","com.innopolis.innoqueue.domain.util.StringGenerator"]},{"name":"class SwaggerConfiguration","description":"com.innopolis.innoqueue.configuration.SwaggerConfiguration","location":"innoqueue/com.innopolis.innoqueue.configuration/-swagger-configuration/index.html","searchKeys":["SwaggerConfiguration","class SwaggerConfiguration","com.innopolis.innoqueue.configuration.SwaggerConfiguration"]},{"name":"class ToDoTaskServiceImpl(userService: UserService, queueService: QueueService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, skipNotificationSenderServiceImpl: NotificationSenderService, completeNotificationSenderServiceImpl: NotificationSenderService, queueRepository: QueueRepository, userQueueRepository: UserQueueRepository) : ToDoTaskService","description":"com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-to-do-task-service-impl/index.html","searchKeys":["ToDoTaskServiceImpl","class ToDoTaskServiceImpl(userService: UserService, queueService: QueueService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, skipNotificationSenderServiceImpl: NotificationSenderService, completeNotificationSenderServiceImpl: NotificationSenderService, queueRepository: QueueRepository, userQueueRepository: UserQueueRepository) : ToDoTaskService","com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl"]},{"name":"class UnfreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-unfreeze-notification-sender-service-impl/index.html","searchKeys":["UnfreezeNotificationSenderServiceImpl","class UnfreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl"]},{"name":"class UpdateNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-update-notification-sender-service-impl/index.html","searchKeys":["UpdateNotificationSenderServiceImpl","class UpdateNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl"]},{"name":"class User","description":"com.innopolis.innoqueue.domain.user.model.User","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/index.html","searchKeys":["User","class User","com.innopolis.innoqueue.domain.user.model.User"]},{"name":"class UserController(service: UserService)","description":"com.innopolis.innoqueue.rest.v1.UserController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/index.html","searchKeys":["UserController","class UserController(service: UserService)","com.innopolis.innoqueue.rest.v1.UserController"]},{"name":"class UserQueue","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/index.html","searchKeys":["UserQueue","class UserQueue","com.innopolis.innoqueue.domain.userqueue.model.UserQueue"]},{"name":"class UserQueueId : Serializable","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-id/index.html","searchKeys":["UserQueueId","class UserQueueId : Serializable","com.innopolis.innoqueue.domain.userqueue.model.UserQueueId"]},{"name":"class UserServiceImpl(userRepository: UserRepository, fcmTokenService: FcmTokenService) : UserService","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/index.html","searchKeys":["UserServiceImpl","class UserServiceImpl(userRepository: UserRepository, fcmTokenService: FcmTokenService) : UserService","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl"]},{"name":"class YourTurnNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","description":"com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-your-turn-notification-sender-service-impl/index.html","searchKeys":["YourTurnNotificationSenderServiceImpl","class YourTurnNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties) : NotificationSenderServiceAbstract","com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl"]},{"name":"const val serialVersionUID: Long = 1","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.Companion.serialVersionUID","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token-id/-companion/serial-version-u-i-d.html","searchKeys":["serialVersionUID","const val serialVersionUID: Long = 1","com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.Companion.serialVersionUID"]},{"name":"const val serialVersionUID: Long = 2","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.Companion.serialVersionUID","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-id/-companion/serial-version-u-i-d.html","searchKeys":["serialVersionUID","const val serialVersionUID: Long = 2","com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.Companion.serialVersionUID"]},{"name":"data class Actor(val id: Long, val name: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.Actor","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-actor/index.html","searchKeys":["Actor","data class Actor(val id: Long, val name: String)","com.innopolis.innoqueue.webclients.firebase.model.Actor"]},{"name":"data class EditQueueDto(val queueName: String?, val queueColor: String?, val trackExpenses: Boolean?, val participants: List<Long>?)","description":"com.innopolis.innoqueue.domain.queue.dto.EditQueueDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-edit-queue-dto/index.html","searchKeys":["EditQueueDto","data class EditQueueDto(val queueName: String?, val queueColor: String?, val trackExpenses: Boolean?, val participants: List<Long>?)","com.innopolis.innoqueue.domain.queue.dto.EditQueueDto"]},{"name":"data class EmptyDto(val result: String)","description":"com.innopolis.innoqueue.rest.v1.dto.EmptyDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-empty-dto/index.html","searchKeys":["EmptyDto","data class EmptyDto(val result: String)","com.innopolis.innoqueue.rest.v1.dto.EmptyDto"]},{"name":"data class ExpensesDto(val expenses: Long?)","description":"com.innopolis.innoqueue.rest.v1.dto.ExpensesDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-expenses-dto/index.html","searchKeys":["ExpensesDto","data class ExpensesDto(val expenses: Long?)","com.innopolis.innoqueue.rest.v1.dto.ExpensesDto"]},{"name":"data class FirebaseMessage(val token: String, val titleBody: TitleBody, val queueId: Long, val queueName: String, val participantName: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/index.html","searchKeys":["FirebaseMessage","data class FirebaseMessage(val token: String, val titleBody: TitleBody, val queueId: Long, val queueName: String, val participantName: String)","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage"]},{"name":"data class FirebaseRecipients(val notificationType: NotificationType, val queue: Queue, val actor: Actor, val recipients: List<Recipient>)","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-recipients/index.html","searchKeys":["FirebaseRecipients","data class FirebaseRecipients(val notificationType: NotificationType, val queue: Queue, val actor: Actor, val recipients: List<Recipient>)","com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients"]},{"name":"data class HostDto(val dev: String, val prod: String)","description":"com.innopolis.innoqueue.domain.external.dto.HostDto","location":"innoqueue/com.innopolis.innoqueue.domain.external.dto/-host-dto/index.html","searchKeys":["HostDto","data class HostDto(val dev: String, val prod: String)","com.innopolis.innoqueue.domain.external.dto.HostDto"]},{"name":"data class NewNotificationDto(val anyNew: Boolean)","description":"com.innopolis.innoqueue.rest.v1.dto.NewNotificationDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-notification-dto/index.html","searchKeys":["NewNotificationDto","data class NewNotificationDto(val anyNew: Boolean)","com.innopolis.innoqueue.rest.v1.dto.NewNotificationDto"]},{"name":"data class NewQueueDto(val queueName: String, val queueColor: String, val trackExpenses: Boolean)","description":"com.innopolis.innoqueue.domain.queue.dto.NewQueueDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-new-queue-dto/index.html","searchKeys":["NewQueueDto","data class NewQueueDto(val queueName: String, val queueColor: String, val trackExpenses: Boolean)","com.innopolis.innoqueue.domain.queue.dto.NewQueueDto"]},{"name":"data class NewUserDto(val userName: String, val fcmToken: String)","description":"com.innopolis.innoqueue.rest.v1.dto.NewUserDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-user-dto/index.html","searchKeys":["NewUserDto","data class NewUserDto(val userName: String, val fcmToken: String)","com.innopolis.innoqueue.rest.v1.dto.NewUserDto"]},{"name":"data class NotificationDto(val notificationId: Long, val messageType: NotificationType, val message: String?, val participantId: Long?, val participantName: String?, val queueId: Long?, val queueName: String?, val date: LocalDateTime, val read: Boolean)","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/index.html","searchKeys":["NotificationDto","data class NotificationDto(val notificationId: Long, val messageType: NotificationType, val message: String?, val participantId: Long?, val participantName: String?, val queueId: Long?, val queueName: String?, val date: LocalDateTime, val read: Boolean)","com.innopolis.innoqueue.domain.notification.dto.NotificationDto"]},{"name":"data class NotificationIdsDto(val notificationIds: List<Long>)","description":"com.innopolis.innoqueue.rest.v1.dto.NotificationIdsDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-notification-ids-dto/index.html","searchKeys":["NotificationIdsDto","data class NotificationIdsDto(val notificationIds: List<Long>)","com.innopolis.innoqueue.rest.v1.dto.NotificationIdsDto"]},{"name":"data class NotificationMessageDto(val participantId: Long, val participantName: String, val queueId: Long, val queueName: String)","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-message-dto/index.html","searchKeys":["NotificationMessageDto","data class NotificationMessageDto(val participantId: Long, val participantName: String, val queueId: Long, val queueName: String)","com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto"]},{"name":"data class Queue(val id: Long, val name: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.Queue","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-queue/index.html","searchKeys":["Queue","data class Queue(val id: Long, val name: String)","com.innopolis.innoqueue.webclients.firebase.model.Queue"]},{"name":"data class QueueActivityDto(val active: Boolean)","description":"com.innopolis.innoqueue.rest.v1.dto.QueueActivityDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-queue-activity-dto/index.html","searchKeys":["QueueActivityDto","data class QueueActivityDto(val active: Boolean)","com.innopolis.innoqueue.rest.v1.dto.QueueActivityDto"]},{"name":"data class QueueDetailsDto(val queueId: Long, val queueName: String, val queueColor: String, val trackExpenses: Boolean, val admin: Boolean, val participants: List<QueueParticipantDto>)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/index.html","searchKeys":["QueueDetailsDto","data class QueueDetailsDto(val queueId: Long, val queueName: String, val queueColor: String, val trackExpenses: Boolean, val admin: Boolean, val participants: List<QueueParticipantDto>)","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto"]},{"name":"data class QueueIdDto(val queueId: Long)","description":"com.innopolis.innoqueue.rest.v1.dto.QueueIdDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-queue-id-dto/index.html","searchKeys":["QueueIdDto","data class QueueIdDto(val queueId: Long)","com.innopolis.innoqueue.rest.v1.dto.QueueIdDto"]},{"name":"data class QueueParticipantDto(val userId: Long, val userName: String, val expenses: Long?, val active: Boolean, val onDuty: Boolean)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/index.html","searchKeys":["QueueParticipantDto","data class QueueParticipantDto(val userId: Long, val userName: String, val expenses: Long?, val active: Boolean, val onDuty: Boolean)","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto"]},{"name":"data class QueuesListDto(val queues: List<QueueShortDto>)","description":"com.innopolis.innoqueue.domain.queue.dto.QueuesListDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queues-list-dto/index.html","searchKeys":["QueuesListDto","data class QueuesListDto(val queues: List<QueueShortDto>)","com.innopolis.innoqueue.domain.queue.dto.QueuesListDto"]},{"name":"data class Recipient(val id: Long, val fcmTokens: List<String>)","description":"com.innopolis.innoqueue.webclients.firebase.model.Recipient","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-recipient/index.html","searchKeys":["Recipient","data class Recipient(val id: Long, val fcmTokens: List<String>)","com.innopolis.innoqueue.webclients.firebase.model.Recipient"]},{"name":"data class TitleBody(val title: String, val body: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.TitleBody","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-title-body/index.html","searchKeys":["TitleBody","data class TitleBody(val title: String, val body: String)","com.innopolis.innoqueue.webclients.firebase.model.TitleBody"]},{"name":"data class ToDoTaskDto(val queueId: Long?, val queueName: String?, val queueColor: String?, val important: Boolean?, val trackExpenses: Boolean?)","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/index.html","searchKeys":["ToDoTaskDto","data class ToDoTaskDto(val queueId: Long?, val queueName: String?, val queueColor: String?, val important: Boolean?, val trackExpenses: Boolean?)","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto"]},{"name":"data class ToDoTasksListDto(val toDoTasks: List<ToDoTaskDto>)","description":"com.innopolis.innoqueue.rest.v1.dto.ToDoTasksListDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-to-do-tasks-list-dto/index.html","searchKeys":["ToDoTasksListDto","data class ToDoTasksListDto(val toDoTasks: List<ToDoTaskDto>)","com.innopolis.innoqueue.rest.v1.dto.ToDoTasksListDto"]},{"name":"data class TokenDto(val token: String, val userId: Long)","description":"com.innopolis.innoqueue.domain.user.dto.TokenDto","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-token-dto/index.html","searchKeys":["TokenDto","data class TokenDto(val token: String, val userId: Long)","com.innopolis.innoqueue.domain.user.dto.TokenDto"]},{"name":"data class UpdateUserDto(val userName: String?, val completed: Boolean?, val skipped: Boolean?, val joinedQueue: Boolean?, val freeze: Boolean?, val leftQueue: Boolean?, val yourTurn: Boolean?)","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/index.html","searchKeys":["UpdateUserDto","data class UpdateUserDto(val userName: String?, val completed: Boolean?, val skipped: Boolean?, val joinedQueue: Boolean?, val freeze: Boolean?, val leftQueue: Boolean?, val yourTurn: Boolean?)","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto"]},{"name":"data class UserDto(val userName: String, val completed: Boolean, val skipped: Boolean, val joinedQueue: Boolean, val freeze: Boolean, val leftQueue: Boolean, val yourTurn: Boolean)","description":"com.innopolis.innoqueue.domain.user.dto.UserDto","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/index.html","searchKeys":["UserDto","data class UserDto(val userName: String, val completed: Boolean, val skipped: Boolean, val joinedQueue: Boolean, val freeze: Boolean, val leftQueue: Boolean, val yourTurn: Boolean)","com.innopolis.innoqueue.domain.user.dto.UserDto"]},{"name":"data class UserPreferencesProperties(val obligatoryNotifications: List<NotificationType>)","description":"com.innopolis.innoqueue.domain.notification.service.impl.dto.UserPreferencesProperties","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl.dto/-user-preferences-properties/index.html","searchKeys":["UserPreferencesProperties","data class UserPreferencesProperties(val obligatoryNotifications: List<NotificationType>)","com.innopolis.innoqueue.domain.notification.service.impl.dto.UserPreferencesProperties"]},{"name":"enum NotificationType : Enum<NotificationType> ","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/index.html","searchKeys":["NotificationType","enum NotificationType : Enum<NotificationType> ","com.innopolis.innoqueue.domain.notification.enums.NotificationType"]},{"name":"fun Actor(id: Long, name: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.Actor.Actor","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-actor/-actor.html","searchKeys":["Actor","fun Actor(id: Long, name: String)","com.innopolis.innoqueue.webclients.firebase.model.Actor.Actor"]},{"name":"fun AssetLinksController(assetLinks: String? = null)","description":"com.innopolis.innoqueue.rest.AssetLinksController.AssetLinksController","location":"innoqueue/com.innopolis.innoqueue.rest/-asset-links-controller/-asset-links-controller.html","searchKeys":["AssetLinksController","fun AssetLinksController(assetLinks: String? = null)","com.innopolis.innoqueue.rest.AssetLinksController.AssetLinksController"]},{"name":"fun BackendController(service: DatabaseService)","description":"com.innopolis.innoqueue.rest.v1.BackendController.BackendController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-backend-controller/-backend-controller.html","searchKeys":["BackendController","fun BackendController(service: DatabaseService)","com.innopolis.innoqueue.rest.v1.BackendController.BackendController"]},{"name":"fun CompleteNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl.CompleteNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-complete-notification-sender-service-impl/-complete-notification-sender-service-impl.html","searchKeys":["CompleteNotificationSenderServiceImpl","fun CompleteNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl.CompleteNotificationSenderServiceImpl"]},{"name":"fun DatabaseServiceImpl(queueRepository: QueueRepository, devHost: String? = null, prodHost: String? = null)","description":"com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl.DatabaseServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.external.service.impl/-database-service-impl/-database-service-impl.html","searchKeys":["DatabaseServiceImpl","fun DatabaseServiceImpl(queueRepository: QueueRepository, devHost: String? = null, prodHost: String? = null)","com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl.DatabaseServiceImpl"]},{"name":"fun DeleteQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl.DeleteQueueNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-delete-queue-notification-sender-service-impl/-delete-queue-notification-sender-service-impl.html","searchKeys":["DeleteQueueNotificationSenderServiceImpl","fun DeleteQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl.DeleteQueueNotificationSenderServiceImpl"]},{"name":"fun EditQueueDto(queueName: String?, queueColor: String?, trackExpenses: Boolean?, participants: List<Long>?)","description":"com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.EditQueueDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-edit-queue-dto/-edit-queue-dto.html","searchKeys":["EditQueueDto","fun EditQueueDto(queueName: String?, queueColor: String?, trackExpenses: Boolean?, participants: List<Long>?)","com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.EditQueueDto"]},{"name":"fun EmptyDto(result: String)","description":"com.innopolis.innoqueue.rest.v1.dto.EmptyDto.EmptyDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-empty-dto/-empty-dto.html","searchKeys":["EmptyDto","fun EmptyDto(result: String)","com.innopolis.innoqueue.rest.v1.dto.EmptyDto.EmptyDto"]},{"name":"fun ExpensesDto(expenses: Long?)","description":"com.innopolis.innoqueue.rest.v1.dto.ExpensesDto.ExpensesDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-expenses-dto/-expenses-dto.html","searchKeys":["ExpensesDto","fun ExpensesDto(expenses: Long?)","com.innopolis.innoqueue.rest.v1.dto.ExpensesDto.ExpensesDto"]},{"name":"fun FcmToken()","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken.FcmToken","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token/-fcm-token.html","searchKeys":["FcmToken","fun FcmToken()","com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken.FcmToken"]},{"name":"fun FcmTokenId()","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.FcmTokenId","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token-id/-fcm-token-id.html","searchKeys":["FcmTokenId","fun FcmTokenId()","com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.FcmTokenId"]},{"name":"fun FcmTokenServiceImpl(fcmTokenRepository: FcmTokenRepository)","description":"com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl.FcmTokenServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service.impl/-fcm-token-service-impl/-fcm-token-service-impl.html","searchKeys":["FcmTokenServiceImpl","fun FcmTokenServiceImpl(fcmTokenRepository: FcmTokenRepository)","com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl.FcmTokenServiceImpl"]},{"name":"fun FirebaseConfiguration()","description":"com.innopolis.innoqueue.configuration.FirebaseConfiguration.FirebaseConfiguration","location":"innoqueue/com.innopolis.innoqueue.configuration/-firebase-configuration/-firebase-configuration.html","searchKeys":["FirebaseConfiguration","fun FirebaseConfiguration()","com.innopolis.innoqueue.configuration.FirebaseConfiguration.FirebaseConfiguration"]},{"name":"fun FirebaseMessage(token: String, titleBody: TitleBody, queueId: Long, queueName: String, participantName: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.FirebaseMessage","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/-firebase-message.html","searchKeys":["FirebaseMessage","fun FirebaseMessage(token: String, titleBody: TitleBody, queueId: Long, queueName: String, participantName: String)","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.FirebaseMessage"]},{"name":"fun FirebaseMessagingClientImpl(firebaseApp: FirebaseApp?)","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingClientImpl.FirebaseMessagingClientImpl","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-firebase-messaging-client-impl/-firebase-messaging-client-impl.html","searchKeys":["FirebaseMessagingClientImpl","fun FirebaseMessagingClientImpl(firebaseApp: FirebaseApp?)","com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingClientImpl.FirebaseMessagingClientImpl"]},{"name":"fun FirebaseMessagingServiceImpl(firebaseMessagingClient: FirebaseMessagingClient, notificationTextFormerService: NotificationTextFormerService)","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingServiceImpl.FirebaseMessagingServiceImpl","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-firebase-messaging-service-impl/-firebase-messaging-service-impl.html","searchKeys":["FirebaseMessagingServiceImpl","fun FirebaseMessagingServiceImpl(firebaseMessagingClient: FirebaseMessagingClient, notificationTextFormerService: NotificationTextFormerService)","com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingServiceImpl.FirebaseMessagingServiceImpl"]},{"name":"fun FirebaseRecipients(notificationType: NotificationType, queue: Queue, actor: Actor, recipients: List<Recipient>)","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.FirebaseRecipients","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-recipients/-firebase-recipients.html","searchKeys":["FirebaseRecipients","fun FirebaseRecipients(notificationType: NotificationType, queue: Queue, actor: Actor, recipients: List<Recipient>)","com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.FirebaseRecipients"]},{"name":"fun FreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl.FreezeNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-freeze-notification-sender-service-impl/-freeze-notification-sender-service-impl.html","searchKeys":["FreezeNotificationSenderServiceImpl","fun FreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl.FreezeNotificationSenderServiceImpl"]},{"name":"fun HostDto(dev: String, prod: String)","description":"com.innopolis.innoqueue.domain.external.dto.HostDto.HostDto","location":"innoqueue/com.innopolis.innoqueue.domain.external.dto/-host-dto/-host-dto.html","searchKeys":["HostDto","fun HostDto(dev: String, prod: String)","com.innopolis.innoqueue.domain.external.dto.HostDto.HostDto"]},{"name":"fun InnoQueueApplication()","description":"com.innopolis.innoqueue.InnoQueueApplication.InnoQueueApplication","location":"innoqueue/com.innopolis.innoqueue/-inno-queue-application/-inno-queue-application.html","searchKeys":["InnoQueueApplication","fun InnoQueueApplication()","com.innopolis.innoqueue.InnoQueueApplication.InnoQueueApplication"]},{"name":"fun JoinQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl.JoinQueueNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-join-queue-notification-sender-service-impl/-join-queue-notification-sender-service-impl.html","searchKeys":["JoinQueueNotificationSenderServiceImpl","fun JoinQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl.JoinQueueNotificationSenderServiceImpl"]},{"name":"fun LeaveQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl.LeaveQueueNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-leave-queue-notification-sender-service-impl/-leave-queue-notification-sender-service-impl.html","searchKeys":["LeaveQueueNotificationSenderServiceImpl","fun LeaveQueueNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl.LeaveQueueNotificationSenderServiceImpl"]},{"name":"fun MaskingPatternLayout()","description":"com.innopolis.innoqueue.configuration.MaskingPatternLayout.MaskingPatternLayout","location":"innoqueue/com.innopolis.innoqueue.configuration/-masking-pattern-layout/-masking-pattern-layout.html","searchKeys":["MaskingPatternLayout","fun MaskingPatternLayout()","com.innopolis.innoqueue.configuration.MaskingPatternLayout.MaskingPatternLayout"]},{"name":"fun NewNotificationDto(anyNew: Boolean)","description":"com.innopolis.innoqueue.rest.v1.dto.NewNotificationDto.NewNotificationDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-notification-dto/-new-notification-dto.html","searchKeys":["NewNotificationDto","fun NewNotificationDto(anyNew: Boolean)","com.innopolis.innoqueue.rest.v1.dto.NewNotificationDto.NewNotificationDto"]},{"name":"fun NewQueueDto(queueName: String, queueColor: String, trackExpenses: Boolean)","description":"com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.NewQueueDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-new-queue-dto/-new-queue-dto.html","searchKeys":["NewQueueDto","fun NewQueueDto(queueName: String, queueColor: String, trackExpenses: Boolean)","com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.NewQueueDto"]},{"name":"fun NewUserDto(userName: String, fcmToken: String)","description":"com.innopolis.innoqueue.rest.v1.dto.NewUserDto.NewUserDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-user-dto/-new-user-dto.html","searchKeys":["NewUserDto","fun NewUserDto(userName: String, fcmToken: String)","com.innopolis.innoqueue.rest.v1.dto.NewUserDto.NewUserDto"]},{"name":"fun NotSupportedMessageType(message: String)","description":"com.innopolis.innoqueue.webclients.firebase.exception.NotSupportedMessageType.NotSupportedMessageType","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.exception/-not-supported-message-type/-not-supported-message-type.html","searchKeys":["NotSupportedMessageType","fun NotSupportedMessageType(message: String)","com.innopolis.innoqueue.webclients.firebase.exception.NotSupportedMessageType.NotSupportedMessageType"]},{"name":"fun Notification()","description":"com.innopolis.innoqueue.domain.notification.model.Notification.Notification","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/-notification.html","searchKeys":["Notification","fun Notification()","com.innopolis.innoqueue.domain.notification.model.Notification.Notification"]},{"name":"fun NotificationDto(notificationId: Long, messageType: NotificationType, message: String?, participantId: Long?, participantName: String?, queueId: Long?, queueName: String?, date: LocalDateTime, read: Boolean)","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.NotificationDto","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/-notification-dto.html","searchKeys":["NotificationDto","fun NotificationDto(notificationId: Long, messageType: NotificationType, message: String?, participantId: Long?, participantName: String?, queueId: Long?, queueName: String?, date: LocalDateTime, read: Boolean)","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.NotificationDto"]},{"name":"fun NotificationIdsDto(notificationIds: List<Long>)","description":"com.innopolis.innoqueue.rest.v1.dto.NotificationIdsDto.NotificationIdsDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-notification-ids-dto/-notification-ids-dto.html","searchKeys":["NotificationIdsDto","fun NotificationIdsDto(notificationIds: List<Long>)","com.innopolis.innoqueue.rest.v1.dto.NotificationIdsDto.NotificationIdsDto"]},{"name":"fun NotificationMessageDto(participantId: Long, participantName: String, queueId: Long, queueName: String)","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.NotificationMessageDto","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-message-dto/-notification-message-dto.html","searchKeys":["NotificationMessageDto","fun NotificationMessageDto(participantId: Long, participantName: String, queueId: Long, queueName: String)","com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.NotificationMessageDto"]},{"name":"fun NotificationSenderServiceAbstract(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, obligatoryNotifications: List<NotificationType>)","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.NotificationSenderServiceAbstract","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/-notification-sender-service-abstract.html","searchKeys":["NotificationSenderServiceAbstract","fun NotificationSenderServiceAbstract(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, obligatoryNotifications: List<NotificationType>)","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.NotificationSenderServiceAbstract"]},{"name":"fun NotificationTextFormerServiceImpl()","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.NotificationTextFormerServiceImpl.NotificationTextFormerServiceImpl","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-notification-text-former-service-impl/-notification-text-former-service-impl.html","searchKeys":["NotificationTextFormerServiceImpl","fun NotificationTextFormerServiceImpl()","com.innopolis.innoqueue.webclients.firebase.service.impl.NotificationTextFormerServiceImpl.NotificationTextFormerServiceImpl"]},{"name":"fun NotificationsController(notificationsListService: NotificationsListService)","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.NotificationsController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/-notifications-controller.html","searchKeys":["NotificationsController","fun NotificationsController(notificationsListService: NotificationsListService)","com.innopolis.innoqueue.rest.v1.NotificationsController.NotificationsController"]},{"name":"fun NotificationsListServiceImpl(userService: UserService, queueRepository: QueueRepository, notificationRepository: NotificationRepository)","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.NotificationsListServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/-notifications-list-service-impl.html","searchKeys":["NotificationsListServiceImpl","fun NotificationsListServiceImpl(userService: UserService, queueRepository: QueueRepository, notificationRepository: NotificationRepository)","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.NotificationsListServiceImpl"]},{"name":"fun OtherNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl.OtherNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-other-notification-sender-service-impl/-other-notification-sender-service-impl.html","searchKeys":["OtherNotificationSenderServiceImpl","fun OtherNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl.OtherNotificationSenderServiceImpl"]},{"name":"fun Queue()","description":"com.innopolis.innoqueue.domain.queue.model.Queue.Queue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/-queue.html","searchKeys":["Queue","fun Queue()","com.innopolis.innoqueue.domain.queue.model.Queue.Queue"]},{"name":"fun Queue(id: Long, name: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.Queue.Queue","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-queue/-queue.html","searchKeys":["Queue","fun Queue(id: Long, name: String)","com.innopolis.innoqueue.webclients.firebase.model.Queue.Queue"]},{"name":"fun QueueActivityDto(active: Boolean)","description":"com.innopolis.innoqueue.rest.v1.dto.QueueActivityDto.QueueActivityDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-queue-activity-dto/-queue-activity-dto.html","searchKeys":["QueueActivityDto","fun QueueActivityDto(active: Boolean)","com.innopolis.innoqueue.rest.v1.dto.QueueActivityDto.QueueActivityDto"]},{"name":"fun QueueController(queueService: QueueService, toDoService: ToDoTaskService)","description":"com.innopolis.innoqueue.rest.v1.QueueController.QueueController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/-queue-controller.html","searchKeys":["QueueController","fun QueueController(queueService: QueueService, toDoService: ToDoTaskService)","com.innopolis.innoqueue.rest.v1.QueueController.QueueController"]},{"name":"fun QueueDetailsDto(queueId: Long, queueName: String, queueColor: String, trackExpenses: Boolean, admin: Boolean, participants: List<QueueParticipantDto>)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.QueueDetailsDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/-queue-details-dto.html","searchKeys":["QueueDetailsDto","fun QueueDetailsDto(queueId: Long, queueName: String, queueColor: String, trackExpenses: Boolean, admin: Boolean, participants: List<QueueParticipantDto>)","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.QueueDetailsDto"]},{"name":"fun QueueIdDto(queueId: Long)","description":"com.innopolis.innoqueue.rest.v1.dto.QueueIdDto.QueueIdDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-queue-id-dto/-queue-id-dto.html","searchKeys":["QueueIdDto","fun QueueIdDto(queueId: Long)","com.innopolis.innoqueue.rest.v1.dto.QueueIdDto.QueueIdDto"]},{"name":"fun QueueInviteCodeDto(pinCode: String?, qrCode: String?)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto.QueueInviteCodeDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-invite-code-dto/-queue-invite-code-dto.html","searchKeys":["QueueInviteCodeDto","fun QueueInviteCodeDto(pinCode: String?, qrCode: String?)","com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto.QueueInviteCodeDto"]},{"name":"fun QueueParticipantDto(userId: Long, userName: String, expenses: Long?, active: Boolean, onDuty: Boolean)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.QueueParticipantDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/-queue-participant-dto.html","searchKeys":["QueueParticipantDto","fun QueueParticipantDto(userId: Long, userName: String, expenses: Long?, active: Boolean, onDuty: Boolean)","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.QueueParticipantDto"]},{"name":"fun QueuePinCodeExpiredSpecification(expiredDateTime: LocalDateTime)","description":"com.innopolis.innoqueue.domain.queue.dao.specification.QueuePinCodeExpiredSpecification.QueuePinCodeExpiredSpecification","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao.specification/-queue-pin-code-expired-specification/-queue-pin-code-expired-specification.html","searchKeys":["QueuePinCodeExpiredSpecification","fun QueuePinCodeExpiredSpecification(expiredDateTime: LocalDateTime)","com.innopolis.innoqueue.domain.queue.dao.specification.QueuePinCodeExpiredSpecification.QueuePinCodeExpiredSpecification"]},{"name":"fun QueueQrCodeExpiredSpecification(expiredDateTime: LocalDateTime)","description":"com.innopolis.innoqueue.domain.queue.dao.specification.QueueQrCodeExpiredSpecification.QueueQrCodeExpiredSpecification","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao.specification/-queue-qr-code-expired-specification/-queue-qr-code-expired-specification.html","searchKeys":["QueueQrCodeExpiredSpecification","fun QueueQrCodeExpiredSpecification(expiredDateTime: LocalDateTime)","com.innopolis.innoqueue.domain.queue.dao.specification.QueueQrCodeExpiredSpecification.QueueQrCodeExpiredSpecification"]},{"name":"fun QueueServiceImpl(userService: UserService, unfreezeNotificationSenderServiceImpl: NotificationSenderService, freezeNotificationSenderServiceImpl: NotificationSenderService, deleteQueueNotificationSenderServiceImpl: NotificationSenderService, leaveQueueNotificationSenderServiceImpl: NotificationSenderService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, joinQueueNotificationSenderServiceImpl: NotificationSenderService, shakeNotificationSenderServiceImpl: NotificationSenderService, userQueueRepository: UserQueueRepository, queueRepository: QueueRepository)","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.QueueServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/-queue-service-impl.html","searchKeys":["QueueServiceImpl","fun QueueServiceImpl(userService: UserService, unfreezeNotificationSenderServiceImpl: NotificationSenderService, freezeNotificationSenderServiceImpl: NotificationSenderService, deleteQueueNotificationSenderServiceImpl: NotificationSenderService, leaveQueueNotificationSenderServiceImpl: NotificationSenderService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, joinQueueNotificationSenderServiceImpl: NotificationSenderService, shakeNotificationSenderServiceImpl: NotificationSenderService, userQueueRepository: UserQueueRepository, queueRepository: QueueRepository)","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.QueueServiceImpl"]},{"name":"fun QueueShortDto(queueId: Long, queueName: String, queueColor: String, onDutyUserName: String, active: Boolean)","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.QueueShortDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/-queue-short-dto.html","searchKeys":["QueueShortDto","fun QueueShortDto(queueId: Long, queueName: String, queueColor: String, onDutyUserName: String, active: Boolean)","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.QueueShortDto"]},{"name":"fun QueuesListDto(queues: List<QueueShortDto>)","description":"com.innopolis.innoqueue.domain.queue.dto.QueuesListDto.QueuesListDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queues-list-dto/-queues-list-dto.html","searchKeys":["QueuesListDto","fun QueuesListDto(queues: List<QueueShortDto>)","com.innopolis.innoqueue.domain.queue.dto.QueuesListDto.QueuesListDto"]},{"name":"fun Recipient(id: Long, fcmTokens: List<String>)","description":"com.innopolis.innoqueue.webclients.firebase.model.Recipient.Recipient","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-recipient/-recipient.html","searchKeys":["Recipient","fun Recipient(id: Long, fcmTokens: List<String>)","com.innopolis.innoqueue.webclients.firebase.model.Recipient.Recipient"]},{"name":"fun RequestLoggingFilterConfig()","description":"com.innopolis.innoqueue.configuration.RequestLoggingFilterConfig.RequestLoggingFilterConfig","location":"innoqueue/com.innopolis.innoqueue.configuration/-request-logging-filter-config/-request-logging-filter-config.html","searchKeys":["RequestLoggingFilterConfig","fun RequestLoggingFilterConfig()","com.innopolis.innoqueue.configuration.RequestLoggingFilterConfig.RequestLoggingFilterConfig"]},{"name":"fun ShakeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.ShakeNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-shake-notification-sender-service-impl/-shake-notification-sender-service-impl.html","searchKeys":["ShakeNotificationSenderServiceImpl","fun ShakeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.ShakeNotificationSenderServiceImpl"]},{"name":"fun SkipNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl.SkipNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-skip-notification-sender-service-impl/-skip-notification-sender-service-impl.html","searchKeys":["SkipNotificationSenderServiceImpl","fun SkipNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl.SkipNotificationSenderServiceImpl"]},{"name":"fun StringGenerator(stringLength: Int, excludedStrings: List<String> = emptyList())","description":"com.innopolis.innoqueue.domain.util.StringGenerator.StringGenerator","location":"innoqueue/com.innopolis.innoqueue.domain.util/-string-generator/-string-generator.html","searchKeys":["StringGenerator","fun StringGenerator(stringLength: Int, excludedStrings: List<String> = emptyList())","com.innopolis.innoqueue.domain.util.StringGenerator.StringGenerator"]},{"name":"fun SwaggerConfiguration()","description":"com.innopolis.innoqueue.configuration.SwaggerConfiguration.SwaggerConfiguration","location":"innoqueue/com.innopolis.innoqueue.configuration/-swagger-configuration/-swagger-configuration.html","searchKeys":["SwaggerConfiguration","fun SwaggerConfiguration()","com.innopolis.innoqueue.configuration.SwaggerConfiguration.SwaggerConfiguration"]},{"name":"fun TitleBody(title: String, body: String)","description":"com.innopolis.innoqueue.webclients.firebase.model.TitleBody.TitleBody","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-title-body/-title-body.html","searchKeys":["TitleBody","fun TitleBody(title: String, body: String)","com.innopolis.innoqueue.webclients.firebase.model.TitleBody.TitleBody"]},{"name":"fun ToDoTaskDto(queueId: Long?, queueName: String?, queueColor: String?, important: Boolean?, trackExpenses: Boolean?)","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.ToDoTaskDto","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/-to-do-task-dto.html","searchKeys":["ToDoTaskDto","fun ToDoTaskDto(queueId: Long?, queueName: String?, queueColor: String?, important: Boolean?, trackExpenses: Boolean?)","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.ToDoTaskDto"]},{"name":"fun ToDoTaskServiceImpl(userService: UserService, queueService: QueueService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, skipNotificationSenderServiceImpl: NotificationSenderService, completeNotificationSenderServiceImpl: NotificationSenderService, queueRepository: QueueRepository, userQueueRepository: UserQueueRepository)","description":"com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.ToDoTaskServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-to-do-task-service-impl/-to-do-task-service-impl.html","searchKeys":["ToDoTaskServiceImpl","fun ToDoTaskServiceImpl(userService: UserService, queueService: QueueService, yourTurnNotificationSenderServiceImpl: NotificationSenderService, skipNotificationSenderServiceImpl: NotificationSenderService, completeNotificationSenderServiceImpl: NotificationSenderService, queueRepository: QueueRepository, userQueueRepository: UserQueueRepository)","com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.ToDoTaskServiceImpl"]},{"name":"fun ToDoTasksListDto(toDoTasks: List<ToDoTaskDto>)","description":"com.innopolis.innoqueue.rest.v1.dto.ToDoTasksListDto.ToDoTasksListDto","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-to-do-tasks-list-dto/-to-do-tasks-list-dto.html","searchKeys":["ToDoTasksListDto","fun ToDoTasksListDto(toDoTasks: List<ToDoTaskDto>)","com.innopolis.innoqueue.rest.v1.dto.ToDoTasksListDto.ToDoTasksListDto"]},{"name":"fun TokenDto(token: String, userId: Long)","description":"com.innopolis.innoqueue.domain.user.dto.TokenDto.TokenDto","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-token-dto/-token-dto.html","searchKeys":["TokenDto","fun TokenDto(token: String, userId: Long)","com.innopolis.innoqueue.domain.user.dto.TokenDto.TokenDto"]},{"name":"fun UnfreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl.UnfreezeNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-unfreeze-notification-sender-service-impl/-unfreeze-notification-sender-service-impl.html","searchKeys":["UnfreezeNotificationSenderServiceImpl","fun UnfreezeNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl.UnfreezeNotificationSenderServiceImpl"]},{"name":"fun UpdateNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl.UpdateNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-update-notification-sender-service-impl/-update-notification-sender-service-impl.html","searchKeys":["UpdateNotificationSenderServiceImpl","fun UpdateNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl.UpdateNotificationSenderServiceImpl"]},{"name":"fun UpdateUserDto(userName: String?, completed: Boolean?, skipped: Boolean?, joinedQueue: Boolean?, freeze: Boolean?, leftQueue: Boolean?, yourTurn: Boolean?)","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.UpdateUserDto","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/-update-user-dto.html","searchKeys":["UpdateUserDto","fun UpdateUserDto(userName: String?, completed: Boolean?, skipped: Boolean?, joinedQueue: Boolean?, freeze: Boolean?, leftQueue: Boolean?, yourTurn: Boolean?)","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.UpdateUserDto"]},{"name":"fun User()","description":"com.innopolis.innoqueue.domain.user.model.User.User","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/-user.html","searchKeys":["User","fun User()","com.innopolis.innoqueue.domain.user.model.User.User"]},{"name":"fun UserController(service: UserService)","description":"com.innopolis.innoqueue.rest.v1.UserController.UserController","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/-user-controller.html","searchKeys":["UserController","fun UserController(service: UserService)","com.innopolis.innoqueue.rest.v1.UserController.UserController"]},{"name":"fun UserDto(userName: String, completed: Boolean, skipped: Boolean, joinedQueue: Boolean, freeze: Boolean, leftQueue: Boolean, yourTurn: Boolean)","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.UserDto","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/-user-dto.html","searchKeys":["UserDto","fun UserDto(userName: String, completed: Boolean, skipped: Boolean, joinedQueue: Boolean, freeze: Boolean, leftQueue: Boolean, yourTurn: Boolean)","com.innopolis.innoqueue.domain.user.dto.UserDto.UserDto"]},{"name":"fun UserPreferencesProperties(obligatoryNotifications: List<NotificationType>)","description":"com.innopolis.innoqueue.domain.notification.service.impl.dto.UserPreferencesProperties.UserPreferencesProperties","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl.dto/-user-preferences-properties/-user-preferences-properties.html","searchKeys":["UserPreferencesProperties","fun UserPreferencesProperties(obligatoryNotifications: List<NotificationType>)","com.innopolis.innoqueue.domain.notification.service.impl.dto.UserPreferencesProperties.UserPreferencesProperties"]},{"name":"fun UserQueue()","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.UserQueue","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/-user-queue.html","searchKeys":["UserQueue","fun UserQueue()","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.UserQueue"]},{"name":"fun UserQueueId()","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.UserQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-id/-user-queue-id.html","searchKeys":["UserQueueId","fun UserQueueId()","com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.UserQueueId"]},{"name":"fun UserServiceImpl(userRepository: UserRepository, fcmTokenService: FcmTokenService)","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.UserServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/-user-service-impl.html","searchKeys":["UserServiceImpl","fun UserServiceImpl(userRepository: UserRepository, fcmTokenService: FcmTokenService)","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.UserServiceImpl"]},{"name":"fun YourTurnNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","description":"com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl.YourTurnNotificationSenderServiceImpl","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-your-turn-notification-sender-service-impl/-your-turn-notification-sender-service-impl.html","searchKeys":["YourTurnNotificationSenderServiceImpl","fun YourTurnNotificationSenderServiceImpl(firebaseMessagingService: FirebaseMessagingService, userService: UserService, fcmTokenService: FcmTokenService, userQueueRepository: UserQueueRepository, notificationRepository: NotificationRepository, userPreferencesProperties: UserPreferencesProperties)","com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl.YourTurnNotificationSenderServiceImpl"]},{"name":"fun addMaskPattern(maskPattern: String)","description":"com.innopolis.innoqueue.configuration.MaskingPatternLayout.addMaskPattern","location":"innoqueue/com.innopolis.innoqueue.configuration/-masking-pattern-layout/add-mask-pattern.html","searchKeys":["addMaskPattern","fun addMaskPattern(maskPattern: String)","com.innopolis.innoqueue.configuration.MaskingPatternLayout.addMaskPattern"]},{"name":"fun anyNewNotification(token: String): NewNotificationDto","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.anyNewNotification","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/any-new-notification.html","searchKeys":["anyNewNotification","fun anyNewNotification(token: String): NewNotificationDto","com.innopolis.innoqueue.rest.v1.NotificationsController.anyNewNotification"]},{"name":"fun assignNextUser(queue: UserQueue, userService: UserService, userQueueRepository: UserQueueRepository, queueRepository: QueueRepository): User","description":"com.innopolis.innoqueue.domain.queue.util.UsersQueueLogic.assignNextUser","location":"innoqueue/com.innopolis.innoqueue.domain.queue.util/-users-queue-logic/assign-next-user.html","searchKeys":["assignNextUser","fun assignNextUser(queue: UserQueue, userService: UserService, userQueueRepository: UserQueueRepository, queueRepository: QueueRepository): User","com.innopolis.innoqueue.domain.queue.util.UsersQueueLogic.assignNextUser"]},{"name":"fun changeQueueActivity(token: String, queueId: Long, queueActivityDto: QueueActivityDto)","description":"com.innopolis.innoqueue.rest.v1.QueueController.changeQueueActivity","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/change-queue-activity.html","searchKeys":["changeQueueActivity","fun changeQueueActivity(token: String, queueId: Long, queueActivityDto: QueueActivityDto)","com.innopolis.innoqueue.rest.v1.QueueController.changeQueueActivity"]},{"name":"fun clearExpiredInviteCodes(): EmptyDto","description":"com.innopolis.innoqueue.rest.v1.BackendController.clearExpiredInviteCodes","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-backend-controller/clear-expired-invite-codes.html","searchKeys":["clearExpiredInviteCodes","fun clearExpiredInviteCodes(): EmptyDto","com.innopolis.innoqueue.rest.v1.BackendController.clearExpiredInviteCodes"]},{"name":"fun completeTask(token: String, queueId: Long, expensesDto: ExpensesDto?)","description":"com.innopolis.innoqueue.rest.v1.QueueController.completeTask","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/complete-task.html","searchKeys":["completeTask","fun completeTask(token: String, queueId: Long, expensesDto: ExpensesDto?)","com.innopolis.innoqueue.rest.v1.QueueController.completeTask"]},{"name":"fun createNewUser(newUserDTO: NewUserDto): TokenDto","description":"com.innopolis.innoqueue.rest.v1.UserController.createNewUser","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/create-new-user.html","searchKeys":["createNewUser","fun createNewUser(newUserDTO: NewUserDto): TokenDto","com.innopolis.innoqueue.rest.v1.UserController.createNewUser"]},{"name":"fun createNotification(recipientUserId: Long, participantUserId: Long, referredQueueId: Long): Notification","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.createNotification","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/create-notification.html","searchKeys":["createNotification","fun createNotification(recipientUserId: Long, participantUserId: Long, referredQueueId: Long): Notification","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.createNotification"]},{"name":"fun createQueue(token: String, queue: NewQueueDto): QueueDetailsDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.createQueue","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/create-queue.html","searchKeys":["createQueue","fun createQueue(token: String, queue: NewQueueDto): QueueDetailsDto","com.innopolis.innoqueue.rest.v1.QueueController.createQueue"]},{"name":"fun deleteNotificationById(token: String, notificationId: Long)","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.deleteNotificationById","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/delete-notification-by-id.html","searchKeys":["deleteNotificationById","fun deleteNotificationById(token: String, notificationId: Long)","com.innopolis.innoqueue.rest.v1.NotificationsController.deleteNotificationById"]},{"name":"fun deleteNotifications(token: String, notificationIds: NotificationIdsDto?)","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.deleteNotifications","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/delete-notifications.html","searchKeys":["deleteNotifications","fun deleteNotifications(token: String, notificationIds: NotificationIdsDto?)","com.innopolis.innoqueue.rest.v1.NotificationsController.deleteNotifications"]},{"name":"fun deleteQueue(token: String, queueId: Long)","description":"com.innopolis.innoqueue.rest.v1.QueueController.deleteQueue","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/delete-queue.html","searchKeys":["deleteQueue","fun deleteQueue(token: String, queueId: Long)","com.innopolis.innoqueue.rest.v1.QueueController.deleteQueue"]},{"name":"fun editQueue(token: String, queueId: Long, queue: EditQueueDto): QueueDetailsDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.editQueue","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/edit-queue.html","searchKeys":["editQueue","fun editQueue(token: String, queueId: Long, queue: EditQueueDto): QueueDetailsDto","com.innopolis.innoqueue.rest.v1.QueueController.editQueue"]},{"name":"fun generateString(): String","description":"com.innopolis.innoqueue.domain.util.StringGenerator.generateString","location":"innoqueue/com.innopolis.innoqueue.domain.util/-string-generator/generate-string.html","searchKeys":["generateString","fun generateString(): String","com.innopolis.innoqueue.domain.util.StringGenerator.generateString"]},{"name":"fun get(): String","description":"com.innopolis.innoqueue.rest.AssetLinksController.get","location":"innoqueue/com.innopolis.innoqueue.rest/-asset-links-controller/get.html","searchKeys":["get","fun get(): String","com.innopolis.innoqueue.rest.AssetLinksController.get"]},{"name":"fun getHost(): HostDto","description":"com.innopolis.innoqueue.rest.v1.BackendController.getHost","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-backend-controller/get-host.html","searchKeys":["getHost","fun getHost(): HostDto","com.innopolis.innoqueue.rest.v1.BackendController.getHost"]},{"name":"fun getNotifications(token: String, page: Int, size: Int): Page<NotificationDto>","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.getNotifications","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/get-notifications.html","searchKeys":["getNotifications","fun getNotifications(token: String, page: Int, size: Int): Page<NotificationDto>","com.innopolis.innoqueue.rest.v1.NotificationsController.getNotifications"]},{"name":"fun getQueueById(token: String, queueId: Long): QueueDetailsDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.getQueueById","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/get-queue-by-id.html","searchKeys":["getQueueById","fun getQueueById(token: String, queueId: Long): QueueDetailsDto","com.innopolis.innoqueue.rest.v1.QueueController.getQueueById"]},{"name":"fun getQueueInviteCode(token: String, queueId: Long): QueueInviteCodeDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.getQueueInviteCode","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/get-queue-invite-code.html","searchKeys":["getQueueInviteCode","fun getQueueInviteCode(token: String, queueId: Long): QueueInviteCodeDto","com.innopolis.innoqueue.rest.v1.QueueController.getQueueInviteCode"]},{"name":"fun getQueues(token: String, sort: String?): QueuesListDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.getQueues","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/get-queues.html","searchKeys":["getQueues","fun getQueues(token: String, sort: String?): QueuesListDto","com.innopolis.innoqueue.rest.v1.QueueController.getQueues"]},{"name":"fun getToDoTasks(token: String): ToDoTasksListDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.getToDoTasks","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/get-to-do-tasks.html","searchKeys":["getToDoTasks","fun getToDoTasks(token: String): ToDoTasksListDto","com.innopolis.innoqueue.rest.v1.QueueController.getToDoTasks"]},{"name":"fun getUserSettings(token: String): UserDto","description":"com.innopolis.innoqueue.rest.v1.UserController.getUserSettings","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/get-user-settings.html","searchKeys":["getUserSettings","fun getUserSettings(token: String): UserDto","com.innopolis.innoqueue.rest.v1.UserController.getUserSettings"]},{"name":"fun handleBadRequest(e: IllegalArgumentException): ResponseEntity<String>","description":"com.innopolis.innoqueue.rest.v1.QueueController.handleBadRequest","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/handle-bad-request.html","searchKeys":["handleBadRequest","fun handleBadRequest(e: IllegalArgumentException): ResponseEntity<String>","com.innopolis.innoqueue.rest.v1.QueueController.handleBadRequest"]},{"name":"fun handleBadRequest(e: IllegalArgumentException): ResponseEntity<String>","description":"com.innopolis.innoqueue.rest.v1.UserController.handleBadRequest","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/handle-bad-request.html","searchKeys":["handleBadRequest","fun handleBadRequest(e: IllegalArgumentException): ResponseEntity<String>","com.innopolis.innoqueue.rest.v1.UserController.handleBadRequest"]},{"name":"fun handleNotFound(e: IllegalArgumentException): ResponseEntity<String>","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.handleNotFound","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/handle-not-found.html","searchKeys":["handleNotFound","fun handleNotFound(e: IllegalArgumentException): ResponseEntity<String>","com.innopolis.innoqueue.rest.v1.NotificationsController.handleNotFound"]},{"name":"fun handleNotFound(e: NoSuchElementException): ResponseEntity<String>","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.handleNotFound","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/handle-not-found.html","searchKeys":["handleNotFound","fun handleNotFound(e: NoSuchElementException): ResponseEntity<String>","com.innopolis.innoqueue.rest.v1.NotificationsController.handleNotFound"]},{"name":"fun handleNotFound(e: NoSuchElementException): ResponseEntity<String>","description":"com.innopolis.innoqueue.rest.v1.QueueController.handleNotFound","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/handle-not-found.html","searchKeys":["handleNotFound","fun handleNotFound(e: NoSuchElementException): ResponseEntity<String>","com.innopolis.innoqueue.rest.v1.QueueController.handleNotFound"]},{"name":"fun handleNotFound(e: NoSuchElementException): ResponseEntity<String>","description":"com.innopolis.innoqueue.rest.v1.UserController.handleNotFound","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/handle-not-found.html","searchKeys":["handleNotFound","fun handleNotFound(e: NoSuchElementException): ResponseEntity<String>","com.innopolis.innoqueue.rest.v1.UserController.handleNotFound"]},{"name":"fun joinQueue(token: String, queue: QueueInviteCodeDto): QueueDetailsDto","description":"com.innopolis.innoqueue.rest.v1.QueueController.joinQueue","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/join-queue.html","searchKeys":["joinQueue","fun joinQueue(token: String, queue: QueueInviteCodeDto): QueueDetailsDto","com.innopolis.innoqueue.rest.v1.QueueController.joinQueue"]},{"name":"fun logFilter(maxPayloadLength: Int): CommonsRequestLoggingFilter","description":"com.innopolis.innoqueue.configuration.RequestLoggingFilterConfig.logFilter","location":"innoqueue/com.innopolis.innoqueue.configuration/-request-logging-filter-config/log-filter.html","searchKeys":["logFilter","fun logFilter(maxPayloadLength: Int): CommonsRequestLoggingFilter","com.innopolis.innoqueue.configuration.RequestLoggingFilterConfig.logFilter"]},{"name":"fun main(args: Array<String>)","description":"com.innopolis.innoqueue.main","location":"innoqueue/com.innopolis.innoqueue/main.html","searchKeys":["main","fun main(args: Array<String>)","com.innopolis.innoqueue.main"]},{"name":"fun openApi(): OpenAPI","description":"com.innopolis.innoqueue.configuration.SwaggerConfiguration.openApi","location":"innoqueue/com.innopolis.innoqueue.configuration/-swagger-configuration/open-api.html","searchKeys":["openApi","fun openApi(): OpenAPI","com.innopolis.innoqueue.configuration.SwaggerConfiguration.openApi"]},{"name":"fun provideFirebaseOptions(): FirebaseApp?","description":"com.innopolis.innoqueue.configuration.FirebaseConfiguration.provideFirebaseOptions","location":"innoqueue/com.innopolis.innoqueue.configuration/-firebase-configuration/provide-firebase-options.html","searchKeys":["provideFirebaseOptions","fun provideFirebaseOptions(): FirebaseApp?","com.innopolis.innoqueue.configuration.FirebaseConfiguration.provideFirebaseOptions"]},{"name":"fun readNotifications(token: String, notificationIds: NotificationIdsDto?)","description":"com.innopolis.innoqueue.rest.v1.NotificationsController.readNotifications","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-notifications-controller/read-notifications.html","searchKeys":["readNotifications","fun readNotifications(token: String, notificationIds: NotificationIdsDto?)","com.innopolis.innoqueue.rest.v1.NotificationsController.readNotifications"]},{"name":"fun shakeUser(token: String, queueId: Long)","description":"com.innopolis.innoqueue.rest.v1.QueueController.shakeUser","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/shake-user.html","searchKeys":["shakeUser","fun shakeUser(token: String, queueId: Long)","com.innopolis.innoqueue.rest.v1.QueueController.shakeUser"]},{"name":"fun skipTask(token: String, queueId: Long)","description":"com.innopolis.innoqueue.rest.v1.QueueController.skipTask","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-queue-controller/skip-task.html","searchKeys":["skipTask","fun skipTask(token: String, queueId: Long)","com.innopolis.innoqueue.rest.v1.QueueController.skipTask"]},{"name":"fun transformQueueToDTO(queue: Queue?, userId: Long): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.transformQueueToDTO","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/transform-queue-to-d-t-o.html","searchKeys":["transformQueueToDTO","fun transformQueueToDTO(queue: Queue?, userId: Long): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.transformQueueToDTO"]},{"name":"fun updateUserSettings(token: String, settings: UpdateUserDto): UserDto","description":"com.innopolis.innoqueue.rest.v1.UserController.updateUserSettings","location":"innoqueue/com.innopolis.innoqueue.rest.v1/-user-controller/update-user-settings.html","searchKeys":["updateUserSettings","fun updateUserSettings(token: String, settings: UpdateUserDto): UserDto","com.innopolis.innoqueue.rest.v1.UserController.updateUserSettings"]},{"name":"fun valueOf(value: String): NotificationType","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.valueOf","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): NotificationType","com.innopolis.innoqueue.domain.notification.enums.NotificationType.valueOf"]},{"name":"fun values(): Array<NotificationType>","description":"com.innopolis.innoqueue.domain.notification.enums.NotificationType.values","location":"innoqueue/com.innopolis.innoqueue.domain.notification.enums/-notification-type/values.html","searchKeys":["values","fun values(): Array<NotificationType>","com.innopolis.innoqueue.domain.notification.enums.NotificationType.values"]},{"name":"interface DatabaseService","description":"com.innopolis.innoqueue.domain.external.service.DatabaseService","location":"innoqueue/com.innopolis.innoqueue.domain.external.service/-database-service/index.html","searchKeys":["DatabaseService","interface DatabaseService","com.innopolis.innoqueue.domain.external.service.DatabaseService"]},{"name":"interface FcmTokenRepository : CrudRepository<FcmToken, FcmTokenId> ","description":"com.innopolis.innoqueue.domain.fcmtoken.dao.FcmTokenRepository","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.dao/-fcm-token-repository/index.html","searchKeys":["FcmTokenRepository","interface FcmTokenRepository : CrudRepository<FcmToken, FcmTokenId> ","com.innopolis.innoqueue.domain.fcmtoken.dao.FcmTokenRepository"]},{"name":"interface FcmTokenService","description":"com.innopolis.innoqueue.domain.fcmtoken.service.FcmTokenService","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service/-fcm-token-service/index.html","searchKeys":["FcmTokenService","interface FcmTokenService","com.innopolis.innoqueue.domain.fcmtoken.service.FcmTokenService"]},{"name":"interface FirebaseMessagingClient","description":"com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingClient","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service/-firebase-messaging-client/index.html","searchKeys":["FirebaseMessagingClient","interface FirebaseMessagingClient","com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingClient"]},{"name":"interface FirebaseMessagingService","description":"com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingService","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service/-firebase-messaging-service/index.html","searchKeys":["FirebaseMessagingService","interface FirebaseMessagingService","com.innopolis.innoqueue.webclients.firebase.service.FirebaseMessagingService"]},{"name":"interface NotificationRepository : CrudRepository<Notification, Long> ","description":"com.innopolis.innoqueue.domain.notification.dao.NotificationRepository","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dao/-notification-repository/index.html","searchKeys":["NotificationRepository","interface NotificationRepository : CrudRepository<Notification, Long> ","com.innopolis.innoqueue.domain.notification.dao.NotificationRepository"]},{"name":"interface NotificationSenderService","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderService","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service/index.html","searchKeys":["NotificationSenderService","interface NotificationSenderService","com.innopolis.innoqueue.domain.notification.service.NotificationSenderService"]},{"name":"interface NotificationTextFormerService","description":"com.innopolis.innoqueue.webclients.firebase.service.NotificationTextFormerService","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service/-notification-text-former-service/index.html","searchKeys":["NotificationTextFormerService","interface NotificationTextFormerService","com.innopolis.innoqueue.webclients.firebase.service.NotificationTextFormerService"]},{"name":"interface NotificationsListService","description":"com.innopolis.innoqueue.domain.notification.service.NotificationsListService","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notifications-list-service/index.html","searchKeys":["NotificationsListService","interface NotificationsListService","com.innopolis.innoqueue.domain.notification.service.NotificationsListService"]},{"name":"interface QueueAndUserQueue","description":"com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue-and-user-queue/index.html","searchKeys":["QueueAndUserQueue","interface QueueAndUserQueue","com.innopolis.innoqueue.domain.queue.model.QueueAndUserQueue"]},{"name":"interface QueueParticipants","description":"com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-queue-participants/index.html","searchKeys":["QueueParticipants","interface QueueParticipants","com.innopolis.innoqueue.domain.userqueue.model.QueueParticipants"]},{"name":"interface QueueRepository : CrudRepository<Queue, Long> , JpaSpecificationExecutor<Queue> ","description":"com.innopolis.innoqueue.domain.queue.dao.QueueRepository","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao/-queue-repository/index.html","searchKeys":["QueueRepository","interface QueueRepository : CrudRepository<Queue, Long> , JpaSpecificationExecutor<Queue> ","com.innopolis.innoqueue.domain.queue.dao.QueueRepository"]},{"name":"interface QueueService","description":"com.innopolis.innoqueue.domain.queue.service.QueueService","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-queue-service/index.html","searchKeys":["QueueService","interface QueueService","com.innopolis.innoqueue.domain.queue.service.QueueService"]},{"name":"interface ToDoTaskService","description":"com.innopolis.innoqueue.domain.queue.service.ToDoTaskService","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service/-to-do-task-service/index.html","searchKeys":["ToDoTaskService","interface ToDoTaskService","com.innopolis.innoqueue.domain.queue.service.ToDoTaskService"]},{"name":"interface UserQueueAndQueue","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-and-queue/index.html","searchKeys":["UserQueueAndQueue","interface UserQueueAndQueue","com.innopolis.innoqueue.domain.userqueue.model.UserQueueAndQueue"]},{"name":"interface UserQueueRepository : CrudRepository<UserQueue, UserQueueId> ","description":"com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.dao/-user-queue-repository/index.html","searchKeys":["UserQueueRepository","interface UserQueueRepository : CrudRepository<UserQueue, UserQueueId> ","com.innopolis.innoqueue.domain.userqueue.dao.UserQueueRepository"]},{"name":"interface UserQueuesShortForm","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queues-short-form/index.html","searchKeys":["UserQueuesShortForm","interface UserQueuesShortForm","com.innopolis.innoqueue.domain.userqueue.model.UserQueuesShortForm"]},{"name":"interface UserRepository : CrudRepository<User, Long> ","description":"com.innopolis.innoqueue.domain.user.dao.UserRepository","location":"innoqueue/com.innopolis.innoqueue.domain.user.dao/-user-repository/index.html","searchKeys":["UserRepository","interface UserRepository : CrudRepository<User, Long> ","com.innopolis.innoqueue.domain.user.dao.UserRepository"]},{"name":"interface UserService","description":"com.innopolis.innoqueue.domain.user.service.UserService","location":"innoqueue/com.innopolis.innoqueue.domain.user.service/-user-service/index.html","searchKeys":["UserService","interface UserService","com.innopolis.innoqueue.domain.user.service.UserService"]},{"name":"object Companion","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.Companion","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token-id/-companion/index.html","searchKeys":["Companion","object Companion","com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.Companion"]},{"name":"object Companion","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.Companion","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-id/-companion/index.html","searchKeys":["Companion","object Companion","com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.Companion"]},{"name":"object UsersQueueLogic","description":"com.innopolis.innoqueue.domain.queue.util.UsersQueueLogic","location":"innoqueue/com.innopolis.innoqueue.domain.queue.util/-users-queue-logic/index.html","searchKeys":["UsersQueueLogic","object UsersQueueLogic","com.innopolis.innoqueue.domain.queue.util.UsersQueueLogic"]},{"name":"open fun prepareNotificationsListToSend(notificationMessageDto: NotificationMessageDto): List<Notification>","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.prepareNotificationsListToSend","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/prepare-notifications-list-to-send.html","searchKeys":["prepareNotificationsListToSend","open fun prepareNotificationsListToSend(notificationMessageDto: NotificationMessageDto): List<Notification>","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.prepareNotificationsListToSend"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-complete-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-delete-queue-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-freeze-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-join-queue-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-leave-queue-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-other-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-shake-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-skip-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-unfreeze-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-update-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun User.subscribed(): Boolean","description":"com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl.subscribed","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-your-turn-notification-sender-service-impl/subscribed.html","searchKeys":["subscribed","open override fun User.subscribed(): Boolean","com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl.subscribed"]},{"name":"open override fun anyNewNotification(token: String): NewNotificationDto","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.anyNewNotification","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/any-new-notification.html","searchKeys":["anyNewNotification","open override fun anyNewNotification(token: String): NewNotificationDto","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.anyNewNotification"]},{"name":"open override fun clearExpiredInviteCodes(): EmptyDto","description":"com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl.clearExpiredInviteCodes","location":"innoqueue/com.innopolis.innoqueue.domain.external.service.impl/-database-service-impl/clear-expired-invite-codes.html","searchKeys":["clearExpiredInviteCodes","open override fun clearExpiredInviteCodes(): EmptyDto","com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl.clearExpiredInviteCodes"]},{"name":"open override fun clearOldNotifications(): EmptyDto","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.clearOldNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/clear-old-notifications.html","searchKeys":["clearOldNotifications","open override fun clearOldNotifications(): EmptyDto","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.clearOldNotifications"]},{"name":"open override fun completeTask(token: String, taskId: Long, expenses: Long?)","description":"com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.completeTask","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-to-do-task-service-impl/complete-task.html","searchKeys":["completeTask","open override fun completeTask(token: String, taskId: Long, expenses: Long?)","com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.completeTask"]},{"name":"open override fun createNewUser(userName: String, fcmToken: String): TokenDto","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.createNewUser","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/create-new-user.html","searchKeys":["createNewUser","open override fun createNewUser(userName: String, fcmToken: String): TokenDto","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.createNewUser"]},{"name":"open override fun createQueue(token: String, queue: NewQueueDto): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.createQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/create-queue.html","searchKeys":["createQueue","open override fun createQueue(token: String, queue: NewQueueDto): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.createQueue"]},{"name":"open override fun deleteNotificationById(token: String, notificationId: Long)","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.deleteNotificationById","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/delete-notification-by-id.html","searchKeys":["deleteNotificationById","open override fun deleteNotificationById(token: String, notificationId: Long)","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.deleteNotificationById"]},{"name":"open override fun deleteNotifications(token: String, notificationIds: List<Long>?)","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.deleteNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/delete-notifications.html","searchKeys":["deleteNotifications","open override fun deleteNotifications(token: String, notificationIds: List<Long>?)","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.deleteNotifications"]},{"name":"open override fun deleteQueue(token: String, queueId: Long)","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.deleteQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/delete-queue.html","searchKeys":["deleteQueue","open override fun deleteQueue(token: String, queueId: Long)","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.deleteQueue"]},{"name":"open override fun doLayout(event: ILoggingEvent): String","description":"com.innopolis.innoqueue.configuration.MaskingPatternLayout.doLayout","location":"innoqueue/com.innopolis.innoqueue.configuration/-masking-pattern-layout/do-layout.html","searchKeys":["doLayout","open override fun doLayout(event: ILoggingEvent): String","com.innopolis.innoqueue.configuration.MaskingPatternLayout.doLayout"]},{"name":"open override fun editQueue(token: String, queueId: Long, editQueue: EditQueueDto): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.editQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/edit-queue.html","searchKeys":["editQueue","open override fun editQueue(token: String, queueId: Long, editQueue: EditQueueDto): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.editQueue"]},{"name":"open override fun findTokensForUser(userId: Long): List<String>","description":"com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl.findTokensForUser","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service.impl/-fcm-token-service-impl/find-tokens-for-user.html","searchKeys":["findTokensForUser","open override fun findTokensForUser(userId: Long): List<String>","com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl.findTokensForUser"]},{"name":"open override fun findUserById(userId: Long): User?","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.findUserById","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/find-user-by-id.html","searchKeys":["findUserById","open override fun findUserById(userId: Long): User?","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.findUserById"]},{"name":"open override fun findUserByToken(token: String): User","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.findUserByToken","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/find-user-by-token.html","searchKeys":["findUserByToken","open override fun findUserByToken(token: String): User","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.findUserByToken"]},{"name":"open override fun findUserNameById(userId: Long): String?","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.findUserNameById","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/find-user-name-by-id.html","searchKeys":["findUserNameById","open override fun findUserNameById(userId: Long): String?","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.findUserNameById"]},{"name":"open override fun freezeUnFreezeQueue(token: String, queueId: Long, status: Boolean)","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.freezeUnFreezeQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/freeze-un-freeze-queue.html","searchKeys":["freezeUnFreezeQueue","open override fun freezeUnFreezeQueue(token: String, queueId: Long, status: Boolean)","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.freezeUnFreezeQueue"]},{"name":"open override fun getHost(): HostDto","description":"com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl.getHost","location":"innoqueue/com.innopolis.innoqueue.domain.external.service.impl/-database-service-impl/get-host.html","searchKeys":["getHost","open override fun getHost(): HostDto","com.innopolis.innoqueue.domain.external.service.impl.DatabaseServiceImpl.getHost"]},{"name":"open override fun getNotifications(token: String, pageable: Pageable): Page<NotificationDto>","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.getNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/get-notifications.html","searchKeys":["getNotifications","open override fun getNotifications(token: String, pageable: Pageable): Page<NotificationDto>","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.getNotifications"]},{"name":"open override fun getQueueById(token: String, queueId: Long): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getQueueById","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/get-queue-by-id.html","searchKeys":["getQueueById","open override fun getQueueById(token: String, queueId: Long): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getQueueById"]},{"name":"open override fun getQueueInviteCode(token: String, queueId: Long): QueueInviteCodeDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getQueueInviteCode","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/get-queue-invite-code.html","searchKeys":["getQueueInviteCode","open override fun getQueueInviteCode(token: String, queueId: Long): QueueInviteCodeDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getQueueInviteCode"]},{"name":"open override fun getQueues(token: String, sortOption: String?): QueuesListDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getQueues","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/get-queues.html","searchKeys":["getQueues","open override fun getQueues(token: String, sortOption: String?): QueuesListDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getQueues"]},{"name":"open override fun getTitleBody(firebaseRecipients: FirebaseRecipients, isPersonal: Boolean): TitleBody","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.NotificationTextFormerServiceImpl.getTitleBody","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-notification-text-former-service-impl/get-title-body.html","searchKeys":["getTitleBody","open override fun getTitleBody(firebaseRecipients: FirebaseRecipients, isPersonal: Boolean): TitleBody","com.innopolis.innoqueue.webclients.firebase.service.impl.NotificationTextFormerServiceImpl.getTitleBody"]},{"name":"open override fun getToDoTasks(token: String): List<ToDoTaskDto>","description":"com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.getToDoTasks","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-to-do-task-service-impl/get-to-do-tasks.html","searchKeys":["getToDoTasks","open override fun getToDoTasks(token: String): List<ToDoTaskDto>","com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.getToDoTasks"]},{"name":"open override fun getUserQueueByQueueId(user: User, queueId: Long): UserQueue","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getUserQueueByQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/get-user-queue-by-queue-id.html","searchKeys":["getUserQueueByQueueId","open override fun getUserQueueByQueueId(user: User, queueId: Long): UserQueue","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.getUserQueueByQueueId"]},{"name":"open override fun getUserSettings(token: String): UserDto","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.getUserSettings","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/get-user-settings.html","searchKeys":["getUserSettings","open override fun getUserSettings(token: String): UserDto","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.getUserSettings"]},{"name":"open override fun joinQueue(token: String, queueInviteCodeDTO: QueueInviteCodeDto): QueueDetailsDto","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.joinQueue","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/join-queue.html","searchKeys":["joinQueue","open override fun joinQueue(token: String, queueInviteCodeDTO: QueueInviteCodeDto): QueueDetailsDto","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.joinQueue"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-complete-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.CompleteNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-delete-queue-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.DeleteQueueNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-freeze-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.FreezeNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-join-queue-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.JoinQueueNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-leave-queue-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.LeaveQueueNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-other-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.OtherNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-shake-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-skip-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.SkipNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-unfreeze-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.UnfreezeNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-update-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.UpdateNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun notificationType(): NotificationType","description":"com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl.notificationType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-your-turn-notification-sender-service-impl/notification-type.html","searchKeys":["notificationType","open override fun notificationType(): NotificationType","com.innopolis.innoqueue.domain.notification.service.impl.YourTurnNotificationSenderServiceImpl.notificationType"]},{"name":"open override fun prepareNotificationsListToSend(notificationMessageDto: NotificationMessageDto): List<Notification>","description":"com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.prepareNotificationsListToSend","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-shake-notification-sender-service-impl/prepare-notifications-list-to-send.html","searchKeys":["prepareNotificationsListToSend","open override fun prepareNotificationsListToSend(notificationMessageDto: NotificationMessageDto): List<Notification>","com.innopolis.innoqueue.domain.notification.service.impl.ShakeNotificationSenderServiceImpl.prepareNotificationsListToSend"]},{"name":"open override fun readNotifications(token: String, notificationIds: List<Long>?)","description":"com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.readNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl/-notifications-list-service-impl/read-notifications.html","searchKeys":["readNotifications","open override fun readNotifications(token: String, notificationIds: List<Long>?)","com.innopolis.innoqueue.domain.notification.service.impl.NotificationsListServiceImpl.readNotifications"]},{"name":"open override fun saveFcmToken(userId: Long, userFcmToken: String)","description":"com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl.saveFcmToken","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.service.impl/-fcm-token-service-impl/save-fcm-token.html","searchKeys":["saveFcmToken","open override fun saveFcmToken(userId: Long, userFcmToken: String)","com.innopolis.innoqueue.domain.fcmtoken.service.impl.FcmTokenServiceImpl.saveFcmToken"]},{"name":"open override fun sendFirebaseMessage(firebaseMessage: FirebaseMessage)","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingClientImpl.sendFirebaseMessage","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-firebase-messaging-client-impl/send-firebase-message.html","searchKeys":["sendFirebaseMessage","open override fun sendFirebaseMessage(firebaseMessage: FirebaseMessage)","com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingClientImpl.sendFirebaseMessage"]},{"name":"open override fun sendNotificationMessage(notificationMessageDto: NotificationMessageDto)","description":"com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.sendNotificationMessage","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service/-notification-sender-service-abstract/send-notification-message.html","searchKeys":["sendNotificationMessage","open override fun sendNotificationMessage(notificationMessageDto: NotificationMessageDto)","com.innopolis.innoqueue.domain.notification.service.NotificationSenderServiceAbstract.sendNotificationMessage"]},{"name":"open override fun sendNotificationsToFirebase(firebaseRecipients: FirebaseRecipients)","description":"com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingServiceImpl.sendNotificationsToFirebase","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.service.impl/-firebase-messaging-service-impl/send-notifications-to-firebase.html","searchKeys":["sendNotificationsToFirebase","open override fun sendNotificationsToFirebase(firebaseRecipients: FirebaseRecipients)","com.innopolis.innoqueue.webclients.firebase.service.impl.FirebaseMessagingServiceImpl.sendNotificationsToFirebase"]},{"name":"open override fun shakeUser(token: String, queueId: Long)","description":"com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.shakeUser","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-queue-service-impl/shake-user.html","searchKeys":["shakeUser","open override fun shakeUser(token: String, queueId: Long)","com.innopolis.innoqueue.domain.queue.service.impl.QueueServiceImpl.shakeUser"]},{"name":"open override fun skipTask(token: String, taskId: Long)","description":"com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.skipTask","location":"innoqueue/com.innopolis.innoqueue.domain.queue.service.impl/-to-do-task-service-impl/skip-task.html","searchKeys":["skipTask","open override fun skipTask(token: String, taskId: Long)","com.innopolis.innoqueue.domain.queue.service.impl.ToDoTaskServiceImpl.skipTask"]},{"name":"open override fun toPredicate(root: Root<Queue>, query: CriteriaQuery<*>, criteriaBuilder: CriteriaBuilder): Predicate?","description":"com.innopolis.innoqueue.domain.queue.dao.specification.QueuePinCodeExpiredSpecification.toPredicate","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao.specification/-queue-pin-code-expired-specification/to-predicate.html","searchKeys":["toPredicate","open override fun toPredicate(root: Root<Queue>, query: CriteriaQuery<*>, criteriaBuilder: CriteriaBuilder): Predicate?","com.innopolis.innoqueue.domain.queue.dao.specification.QueuePinCodeExpiredSpecification.toPredicate"]},{"name":"open override fun toPredicate(root: Root<Queue>, query: CriteriaQuery<*>, criteriaBuilder: CriteriaBuilder): Predicate?","description":"com.innopolis.innoqueue.domain.queue.dao.specification.QueueQrCodeExpiredSpecification.toPredicate","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dao.specification/-queue-qr-code-expired-specification/to-predicate.html","searchKeys":["toPredicate","open override fun toPredicate(root: Root<Queue>, query: CriteriaQuery<*>, criteriaBuilder: CriteriaBuilder): Predicate?","com.innopolis.innoqueue.domain.queue.dao.specification.QueueQrCodeExpiredSpecification.toPredicate"]},{"name":"open override fun updateUserSettings(token: String, settings: UpdateUserDto): UserDto","description":"com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.updateUserSettings","location":"innoqueue/com.innopolis.innoqueue.domain.user.service.impl/-user-service-impl/update-user-settings.html","searchKeys":["updateUserSettings","open override fun updateUserSettings(token: String, settings: UpdateUserDto): UserDto","com.innopolis.innoqueue.domain.user.service.impl.UserServiceImpl.updateUserSettings"]},{"name":"val active: Boolean","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.active","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/active.html","searchKeys":["active","val active: Boolean","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.active"]},{"name":"val active: Boolean","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.active","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/active.html","searchKeys":["active","val active: Boolean","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.active"]},{"name":"val active: Boolean","description":"com.innopolis.innoqueue.rest.v1.dto.QueueActivityDto.active","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-queue-activity-dto/active.html","searchKeys":["active","val active: Boolean","com.innopolis.innoqueue.rest.v1.dto.QueueActivityDto.active"]},{"name":"val actor: Actor","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.actor","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-recipients/actor.html","searchKeys":["actor","val actor: Actor","com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.actor"]},{"name":"val admin: Boolean","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.admin","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/admin.html","searchKeys":["admin","val admin: Boolean","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.admin"]},{"name":"val anyNew: Boolean","description":"com.innopolis.innoqueue.rest.v1.dto.NewNotificationDto.anyNew","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-notification-dto/any-new.html","searchKeys":["anyNew","val anyNew: Boolean","com.innopolis.innoqueue.rest.v1.dto.NewNotificationDto.anyNew"]},{"name":"val body: String","description":"com.innopolis.innoqueue.webclients.firebase.model.TitleBody.body","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-title-body/body.html","searchKeys":["body","val body: String","com.innopolis.innoqueue.webclients.firebase.model.TitleBody.body"]},{"name":"val completed: Boolean","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.completed","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/completed.html","searchKeys":["completed","val completed: Boolean","com.innopolis.innoqueue.domain.user.dto.UserDto.completed"]},{"name":"val completed: Boolean?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.completed","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/completed.html","searchKeys":["completed","val completed: Boolean?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.completed"]},{"name":"val date: LocalDateTime","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.date","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/date.html","searchKeys":["date","val date: LocalDateTime","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.date"]},{"name":"val dev: String","description":"com.innopolis.innoqueue.domain.external.dto.HostDto.dev","location":"innoqueue/com.innopolis.innoqueue.domain.external.dto/-host-dto/dev.html","searchKeys":["dev","val dev: String","com.innopolis.innoqueue.domain.external.dto.HostDto.dev"]},{"name":"val expenses: Long?","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.expenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/expenses.html","searchKeys":["expenses","val expenses: Long?","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.expenses"]},{"name":"val expenses: Long?","description":"com.innopolis.innoqueue.rest.v1.dto.ExpensesDto.expenses","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-expenses-dto/expenses.html","searchKeys":["expenses","val expenses: Long?","com.innopolis.innoqueue.rest.v1.dto.ExpensesDto.expenses"]},{"name":"val fcmToken: String","description":"com.innopolis.innoqueue.rest.v1.dto.NewUserDto.fcmToken","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-user-dto/fcm-token.html","searchKeys":["fcmToken","val fcmToken: String","com.innopolis.innoqueue.rest.v1.dto.NewUserDto.fcmToken"]},{"name":"val fcmTokens: List<String>","description":"com.innopolis.innoqueue.webclients.firebase.model.Recipient.fcmTokens","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-recipient/fcm-tokens.html","searchKeys":["fcmTokens","val fcmTokens: List<String>","com.innopolis.innoqueue.webclients.firebase.model.Recipient.fcmTokens"]},{"name":"val freeze: Boolean","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.freeze","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/freeze.html","searchKeys":["freeze","val freeze: Boolean","com.innopolis.innoqueue.domain.user.dto.UserDto.freeze"]},{"name":"val freeze: Boolean?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.freeze","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/freeze.html","searchKeys":["freeze","val freeze: Boolean?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.freeze"]},{"name":"val id: Long","description":"com.innopolis.innoqueue.webclients.firebase.model.Actor.id","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-actor/id.html","searchKeys":["id","val id: Long","com.innopolis.innoqueue.webclients.firebase.model.Actor.id"]},{"name":"val id: Long","description":"com.innopolis.innoqueue.webclients.firebase.model.Queue.id","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-queue/id.html","searchKeys":["id","val id: Long","com.innopolis.innoqueue.webclients.firebase.model.Queue.id"]},{"name":"val id: Long","description":"com.innopolis.innoqueue.webclients.firebase.model.Recipient.id","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-recipient/id.html","searchKeys":["id","val id: Long","com.innopolis.innoqueue.webclients.firebase.model.Recipient.id"]},{"name":"val important: Boolean?","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.important","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/important.html","searchKeys":["important","val important: Boolean?","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.important"]},{"name":"val joinedQueue: Boolean","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.joinedQueue","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/joined-queue.html","searchKeys":["joinedQueue","val joinedQueue: Boolean","com.innopolis.innoqueue.domain.user.dto.UserDto.joinedQueue"]},{"name":"val joinedQueue: Boolean?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.joinedQueue","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/joined-queue.html","searchKeys":["joinedQueue","val joinedQueue: Boolean?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.joinedQueue"]},{"name":"val leftQueue: Boolean","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.leftQueue","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/left-queue.html","searchKeys":["leftQueue","val leftQueue: Boolean","com.innopolis.innoqueue.domain.user.dto.UserDto.leftQueue"]},{"name":"val leftQueue: Boolean?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.leftQueue","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/left-queue.html","searchKeys":["leftQueue","val leftQueue: Boolean?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.leftQueue"]},{"name":"val message: String?","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.message","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/message.html","searchKeys":["message","val message: String?","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.message"]},{"name":"val messageType: NotificationType","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.messageType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/message-type.html","searchKeys":["messageType","val messageType: NotificationType","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.messageType"]},{"name":"val name: String","description":"com.innopolis.innoqueue.webclients.firebase.model.Actor.name","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-actor/name.html","searchKeys":["name","val name: String","com.innopolis.innoqueue.webclients.firebase.model.Actor.name"]},{"name":"val name: String","description":"com.innopolis.innoqueue.webclients.firebase.model.Queue.name","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-queue/name.html","searchKeys":["name","val name: String","com.innopolis.innoqueue.webclients.firebase.model.Queue.name"]},{"name":"val notificationId: Long","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.notificationId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/notification-id.html","searchKeys":["notificationId","val notificationId: Long","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.notificationId"]},{"name":"val notificationIds: List<Long>","description":"com.innopolis.innoqueue.rest.v1.dto.NotificationIdsDto.notificationIds","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-notification-ids-dto/notification-ids.html","searchKeys":["notificationIds","val notificationIds: List<Long>","com.innopolis.innoqueue.rest.v1.dto.NotificationIdsDto.notificationIds"]},{"name":"val notificationType: NotificationType","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.notificationType","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-recipients/notification-type.html","searchKeys":["notificationType","val notificationType: NotificationType","com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.notificationType"]},{"name":"val obligatoryNotifications: List<NotificationType>","description":"com.innopolis.innoqueue.domain.notification.service.impl.dto.UserPreferencesProperties.obligatoryNotifications","location":"innoqueue/com.innopolis.innoqueue.domain.notification.service.impl.dto/-user-preferences-properties/obligatory-notifications.html","searchKeys":["obligatoryNotifications","val obligatoryNotifications: List<NotificationType>","com.innopolis.innoqueue.domain.notification.service.impl.dto.UserPreferencesProperties.obligatoryNotifications"]},{"name":"val onDuty: Boolean","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.onDuty","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/on-duty.html","searchKeys":["onDuty","val onDuty: Boolean","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.onDuty"]},{"name":"val onDutyUserName: String","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.onDutyUserName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/on-duty-user-name.html","searchKeys":["onDutyUserName","val onDutyUserName: String","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.onDutyUserName"]},{"name":"val participantId: Long","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.participantId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-message-dto/participant-id.html","searchKeys":["participantId","val participantId: Long","com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.participantId"]},{"name":"val participantId: Long?","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.participantId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/participant-id.html","searchKeys":["participantId","val participantId: Long?","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.participantId"]},{"name":"val participantName: String","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.participantName","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-message-dto/participant-name.html","searchKeys":["participantName","val participantName: String","com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.participantName"]},{"name":"val participantName: String","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.participantName","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/participant-name.html","searchKeys":["participantName","val participantName: String","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.participantName"]},{"name":"val participantName: String?","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.participantName","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/participant-name.html","searchKeys":["participantName","val participantName: String?","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.participantName"]},{"name":"val participants: List<Long>?","description":"com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.participants","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-edit-queue-dto/participants.html","searchKeys":["participants","val participants: List<Long>?","com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.participants"]},{"name":"val participants: List<QueueParticipantDto>","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.participants","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/participants.html","searchKeys":["participants","val participants: List<QueueParticipantDto>","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.participants"]},{"name":"val pinCode: String?","description":"com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto.pinCode","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-invite-code-dto/pin-code.html","searchKeys":["pinCode","val pinCode: String?","com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto.pinCode"]},{"name":"val prod: String","description":"com.innopolis.innoqueue.domain.external.dto.HostDto.prod","location":"innoqueue/com.innopolis.innoqueue.domain.external.dto/-host-dto/prod.html","searchKeys":["prod","val prod: String","com.innopolis.innoqueue.domain.external.dto.HostDto.prod"]},{"name":"val qrCode: String?","description":"com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto.qrCode","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-invite-code-dto/qr-code.html","searchKeys":["qrCode","val qrCode: String?","com.innopolis.innoqueue.domain.queue.dto.QueueInviteCodeDto.qrCode"]},{"name":"val queue: Queue","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.queue","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-recipients/queue.html","searchKeys":["queue","val queue: Queue","com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.queue"]},{"name":"val queueColor: String","description":"com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.queueColor","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-new-queue-dto/queue-color.html","searchKeys":["queueColor","val queueColor: String","com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.queueColor"]},{"name":"val queueColor: String","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.queueColor","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/queue-color.html","searchKeys":["queueColor","val queueColor: String","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.queueColor"]},{"name":"val queueColor: String","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.queueColor","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/queue-color.html","searchKeys":["queueColor","val queueColor: String","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.queueColor"]},{"name":"val queueColor: String?","description":"com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.queueColor","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-edit-queue-dto/queue-color.html","searchKeys":["queueColor","val queueColor: String?","com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.queueColor"]},{"name":"val queueColor: String?","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.queueColor","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/queue-color.html","searchKeys":["queueColor","val queueColor: String?","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.queueColor"]},{"name":"val queueId: Long","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-message-dto/queue-id.html","searchKeys":["queueId","val queueId: Long","com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.queueId"]},{"name":"val queueId: Long","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/queue-id.html","searchKeys":["queueId","val queueId: Long","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.queueId"]},{"name":"val queueId: Long","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/queue-id.html","searchKeys":["queueId","val queueId: Long","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.queueId"]},{"name":"val queueId: Long","description":"com.innopolis.innoqueue.rest.v1.dto.QueueIdDto.queueId","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-queue-id-dto/queue-id.html","searchKeys":["queueId","val queueId: Long","com.innopolis.innoqueue.rest.v1.dto.QueueIdDto.queueId"]},{"name":"val queueId: Long","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.queueId","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/queue-id.html","searchKeys":["queueId","val queueId: Long","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.queueId"]},{"name":"val queueId: Long?","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/queue-id.html","searchKeys":["queueId","val queueId: Long?","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.queueId"]},{"name":"val queueId: Long?","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/queue-id.html","searchKeys":["queueId","val queueId: Long?","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.queueId"]},{"name":"val queueName: String","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-message-dto/queue-name.html","searchKeys":["queueName","val queueName: String","com.innopolis.innoqueue.domain.notification.dto.NotificationMessageDto.queueName"]},{"name":"val queueName: String","description":"com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-new-queue-dto/queue-name.html","searchKeys":["queueName","val queueName: String","com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.queueName"]},{"name":"val queueName: String","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/queue-name.html","searchKeys":["queueName","val queueName: String","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.queueName"]},{"name":"val queueName: String","description":"com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-short-dto/queue-name.html","searchKeys":["queueName","val queueName: String","com.innopolis.innoqueue.domain.queue.dto.QueueShortDto.queueName"]},{"name":"val queueName: String","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.queueName","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/queue-name.html","searchKeys":["queueName","val queueName: String","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.queueName"]},{"name":"val queueName: String?","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/queue-name.html","searchKeys":["queueName","val queueName: String?","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.queueName"]},{"name":"val queueName: String?","description":"com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-edit-queue-dto/queue-name.html","searchKeys":["queueName","val queueName: String?","com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.queueName"]},{"name":"val queueName: String?","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.queueName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/queue-name.html","searchKeys":["queueName","val queueName: String?","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.queueName"]},{"name":"val queues: List<QueueShortDto>","description":"com.innopolis.innoqueue.domain.queue.dto.QueuesListDto.queues","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queues-list-dto/queues.html","searchKeys":["queues","val queues: List<QueueShortDto>","com.innopolis.innoqueue.domain.queue.dto.QueuesListDto.queues"]},{"name":"val read: Boolean","description":"com.innopolis.innoqueue.domain.notification.dto.NotificationDto.read","location":"innoqueue/com.innopolis.innoqueue.domain.notification.dto/-notification-dto/read.html","searchKeys":["read","val read: Boolean","com.innopolis.innoqueue.domain.notification.dto.NotificationDto.read"]},{"name":"val recipients: List<Recipient>","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.recipients","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-recipients/recipients.html","searchKeys":["recipients","val recipients: List<Recipient>","com.innopolis.innoqueue.webclients.firebase.model.FirebaseRecipients.recipients"]},{"name":"val result: String","description":"com.innopolis.innoqueue.rest.v1.dto.EmptyDto.result","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-empty-dto/result.html","searchKeys":["result","val result: String","com.innopolis.innoqueue.rest.v1.dto.EmptyDto.result"]},{"name":"val skipped: Boolean","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.skipped","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/skipped.html","searchKeys":["skipped","val skipped: Boolean","com.innopolis.innoqueue.domain.user.dto.UserDto.skipped"]},{"name":"val skipped: Boolean?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.skipped","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/skipped.html","searchKeys":["skipped","val skipped: Boolean?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.skipped"]},{"name":"val title: String","description":"com.innopolis.innoqueue.webclients.firebase.model.TitleBody.title","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-title-body/title.html","searchKeys":["title","val title: String","com.innopolis.innoqueue.webclients.firebase.model.TitleBody.title"]},{"name":"val titleBody: TitleBody","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.titleBody","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/title-body.html","searchKeys":["titleBody","val titleBody: TitleBody","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.titleBody"]},{"name":"val toDoTasks: List<ToDoTaskDto>","description":"com.innopolis.innoqueue.rest.v1.dto.ToDoTasksListDto.toDoTasks","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-to-do-tasks-list-dto/to-do-tasks.html","searchKeys":["toDoTasks","val toDoTasks: List<ToDoTaskDto>","com.innopolis.innoqueue.rest.v1.dto.ToDoTasksListDto.toDoTasks"]},{"name":"val token: String","description":"com.innopolis.innoqueue.domain.user.dto.TokenDto.token","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-token-dto/token.html","searchKeys":["token","val token: String","com.innopolis.innoqueue.domain.user.dto.TokenDto.token"]},{"name":"val token: String","description":"com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.token","location":"innoqueue/com.innopolis.innoqueue.webclients.firebase.model/-firebase-message/token.html","searchKeys":["token","val token: String","com.innopolis.innoqueue.webclients.firebase.model.FirebaseMessage.token"]},{"name":"val trackExpenses: Boolean","description":"com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.trackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-new-queue-dto/track-expenses.html","searchKeys":["trackExpenses","val trackExpenses: Boolean","com.innopolis.innoqueue.domain.queue.dto.NewQueueDto.trackExpenses"]},{"name":"val trackExpenses: Boolean","description":"com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.trackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-details-dto/track-expenses.html","searchKeys":["trackExpenses","val trackExpenses: Boolean","com.innopolis.innoqueue.domain.queue.dto.QueueDetailsDto.trackExpenses"]},{"name":"val trackExpenses: Boolean?","description":"com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.trackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-edit-queue-dto/track-expenses.html","searchKeys":["trackExpenses","val trackExpenses: Boolean?","com.innopolis.innoqueue.domain.queue.dto.EditQueueDto.trackExpenses"]},{"name":"val trackExpenses: Boolean?","description":"com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.trackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-to-do-task-dto/track-expenses.html","searchKeys":["trackExpenses","val trackExpenses: Boolean?","com.innopolis.innoqueue.domain.queue.dto.ToDoTaskDto.trackExpenses"]},{"name":"val userId: Long","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.userId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/user-id.html","searchKeys":["userId","val userId: Long","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.userId"]},{"name":"val userId: Long","description":"com.innopolis.innoqueue.domain.user.dto.TokenDto.userId","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-token-dto/user-id.html","searchKeys":["userId","val userId: Long","com.innopolis.innoqueue.domain.user.dto.TokenDto.userId"]},{"name":"val userName: String","description":"com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.userName","location":"innoqueue/com.innopolis.innoqueue.domain.queue.dto/-queue-participant-dto/user-name.html","searchKeys":["userName","val userName: String","com.innopolis.innoqueue.domain.queue.dto.QueueParticipantDto.userName"]},{"name":"val userName: String","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.userName","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/user-name.html","searchKeys":["userName","val userName: String","com.innopolis.innoqueue.domain.user.dto.UserDto.userName"]},{"name":"val userName: String","description":"com.innopolis.innoqueue.rest.v1.dto.NewUserDto.userName","location":"innoqueue/com.innopolis.innoqueue.rest.v1.dto/-new-user-dto/user-name.html","searchKeys":["userName","val userName: String","com.innopolis.innoqueue.rest.v1.dto.NewUserDto.userName"]},{"name":"val userName: String?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.userName","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/user-name.html","searchKeys":["userName","val userName: String?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.userName"]},{"name":"val yourTurn: Boolean","description":"com.innopolis.innoqueue.domain.user.dto.UserDto.yourTurn","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-user-dto/your-turn.html","searchKeys":["yourTurn","val yourTurn: Boolean","com.innopolis.innoqueue.domain.user.dto.UserDto.yourTurn"]},{"name":"val yourTurn: Boolean?","description":"com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.yourTurn","location":"innoqueue/com.innopolis.innoqueue.domain.user.dto/-update-user-dto/your-turn.html","searchKeys":["yourTurn","val yourTurn: Boolean?","com.innopolis.innoqueue.domain.user.dto.UpdateUserDto.yourTurn"]},{"name":"var color: String? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.color","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/color.html","searchKeys":["color","var color: String? = null","com.innopolis.innoqueue.domain.queue.model.Queue.color"]},{"name":"var completed: Boolean? = true","description":"com.innopolis.innoqueue.domain.user.model.User.completed","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/completed.html","searchKeys":["completed","var completed: Boolean? = true","com.innopolis.innoqueue.domain.user.model.User.completed"]},{"name":"var completes: Int? = 0","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.completes","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/completes.html","searchKeys":["completes","var completes: Int? = 0","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.completes"]},{"name":"var creatorId: Long? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.creatorId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/creator-id.html","searchKeys":["creatorId","var creatorId: Long? = null","com.innopolis.innoqueue.domain.queue.model.Queue.creatorId"]},{"name":"var currentUserId: Long? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.currentUserId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/current-user-id.html","searchKeys":["currentUserId","var currentUserId: Long? = null","com.innopolis.innoqueue.domain.queue.model.Queue.currentUserId"]},{"name":"var date: LocalDateTime? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.date","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/date.html","searchKeys":["date","var date: LocalDateTime? = null","com.innopolis.innoqueue.domain.notification.model.Notification.date"]},{"name":"var dateCreated: LocalDateTime? = null","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken.dateCreated","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token/date-created.html","searchKeys":["dateCreated","var dateCreated: LocalDateTime? = null","com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken.dateCreated"]},{"name":"var dateJoined: LocalDateTime? = null","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.dateJoined","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/date-joined.html","searchKeys":["dateJoined","var dateJoined: LocalDateTime? = null","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.dateJoined"]},{"name":"var expenses: Long? = 0","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.expenses","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/expenses.html","searchKeys":["expenses","var expenses: Long? = 0","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.expenses"]},{"name":"var fcmToken: String? = null","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.fcmToken","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token-id/fcm-token.html","searchKeys":["fcmToken","var fcmToken: String? = null","com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.fcmToken"]},{"name":"var fcmTokenId: FcmTokenId? = null","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken.fcmTokenId","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token/fcm-token-id.html","searchKeys":["fcmTokenId","var fcmTokenId: FcmTokenId? = null","com.innopolis.innoqueue.domain.fcmtoken.model.FcmToken.fcmTokenId"]},{"name":"var freeze: Boolean? = true","description":"com.innopolis.innoqueue.domain.user.model.User.freeze","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/freeze.html","searchKeys":["freeze","var freeze: Boolean? = true","com.innopolis.innoqueue.domain.user.model.User.freeze"]},{"name":"var id: Long? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.id","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/id.html","searchKeys":["id","var id: Long? = null","com.innopolis.innoqueue.domain.notification.model.Notification.id"]},{"name":"var id: Long? = null","description":"com.innopolis.innoqueue.domain.user.model.User.id","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/id.html","searchKeys":["id","var id: Long? = null","com.innopolis.innoqueue.domain.user.model.User.id"]},{"name":"var isActive: Boolean? = true","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.isActive","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/is-active.html","searchKeys":["isActive","var isActive: Boolean? = true","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.isActive"]},{"name":"var isImportant: Boolean? = false","description":"com.innopolis.innoqueue.domain.queue.model.Queue.isImportant","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/is-important.html","searchKeys":["isImportant","var isImportant: Boolean? = false","com.innopolis.innoqueue.domain.queue.model.Queue.isImportant"]},{"name":"var isRead: Boolean? = false","description":"com.innopolis.innoqueue.domain.notification.model.Notification.isRead","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/is-read.html","searchKeys":["isRead","var isRead: Boolean? = false","com.innopolis.innoqueue.domain.notification.model.Notification.isRead"]},{"name":"var joinedQueue: Boolean? = true","description":"com.innopolis.innoqueue.domain.user.model.User.joinedQueue","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/joined-queue.html","searchKeys":["joinedQueue","var joinedQueue: Boolean? = true","com.innopolis.innoqueue.domain.user.model.User.joinedQueue"]},{"name":"var leftQueue: Boolean? = true","description":"com.innopolis.innoqueue.domain.user.model.User.leftQueue","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/left-queue.html","searchKeys":["leftQueue","var leftQueue: Boolean? = true","com.innopolis.innoqueue.domain.user.model.User.leftQueue"]},{"name":"var message: String? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.message","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/message.html","searchKeys":["message","var message: String? = null","com.innopolis.innoqueue.domain.notification.model.Notification.message"]},{"name":"var messageType: NotificationType? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.messageType","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/message-type.html","searchKeys":["messageType","var messageType: NotificationType? = null","com.innopolis.innoqueue.domain.notification.model.Notification.messageType"]},{"name":"var name: String? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.name","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/name.html","searchKeys":["name","var name: String? = null","com.innopolis.innoqueue.domain.queue.model.Queue.name"]},{"name":"var name: String? = null","description":"com.innopolis.innoqueue.domain.user.model.User.name","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/name.html","searchKeys":["name","var name: String? = null","com.innopolis.innoqueue.domain.user.model.User.name"]},{"name":"var notifications: MutableSet<Notification>","description":"com.innopolis.innoqueue.domain.user.model.User.notifications","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/notifications.html","searchKeys":["notifications","var notifications: MutableSet<Notification>","com.innopolis.innoqueue.domain.user.model.User.notifications"]},{"name":"var participantId: Long? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.participantId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/participant-id.html","searchKeys":["participantId","var participantId: Long? = null","com.innopolis.innoqueue.domain.notification.model.Notification.participantId"]},{"name":"var pinCode: String? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.pinCode","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/pin-code.html","searchKeys":["pinCode","var pinCode: String? = null","com.innopolis.innoqueue.domain.queue.model.Queue.pinCode"]},{"name":"var pinDateCreated: LocalDateTime? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.pinDateCreated","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/pin-date-created.html","searchKeys":["pinDateCreated","var pinDateCreated: LocalDateTime? = null","com.innopolis.innoqueue.domain.queue.model.Queue.pinDateCreated"]},{"name":"var progress: Int? = 0","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.progress","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/progress.html","searchKeys":["progress","var progress: Int? = 0","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.progress"]},{"name":"var qrCode: String? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.qrCode","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/qr-code.html","searchKeys":["qrCode","var qrCode: String? = null","com.innopolis.innoqueue.domain.queue.model.Queue.qrCode"]},{"name":"var qrDateCreated: LocalDateTime? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.qrDateCreated","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/qr-date-created.html","searchKeys":["qrDateCreated","var qrDateCreated: LocalDateTime? = null","com.innopolis.innoqueue.domain.queue.model.Queue.qrDateCreated"]},{"name":"var queueId: Long? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/queue-id.html","searchKeys":["queueId","var queueId: Long? = null","com.innopolis.innoqueue.domain.notification.model.Notification.queueId"]},{"name":"var queueId: Long? = null","description":"com.innopolis.innoqueue.domain.queue.model.Queue.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/queue-id.html","searchKeys":["queueId","var queueId: Long? = null","com.innopolis.innoqueue.domain.queue.model.Queue.queueId"]},{"name":"var queueId: Long? = null","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.queueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-id/queue-id.html","searchKeys":["queueId","var queueId: Long? = null","com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.queueId"]},{"name":"var skipped: Boolean? = true","description":"com.innopolis.innoqueue.domain.user.model.User.skipped","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/skipped.html","searchKeys":["skipped","var skipped: Boolean? = true","com.innopolis.innoqueue.domain.user.model.User.skipped"]},{"name":"var skips: Int? = 0","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.skips","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/skips.html","searchKeys":["skips","var skips: Int? = 0","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.skips"]},{"name":"var token: String? = null","description":"com.innopolis.innoqueue.domain.user.model.User.token","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/token.html","searchKeys":["token","var token: String? = null","com.innopolis.innoqueue.domain.user.model.User.token"]},{"name":"var trackExpenses: Boolean? = false","description":"com.innopolis.innoqueue.domain.queue.model.Queue.trackExpenses","location":"innoqueue/com.innopolis.innoqueue.domain.queue.model/-queue/track-expenses.html","searchKeys":["trackExpenses","var trackExpenses: Boolean? = false","com.innopolis.innoqueue.domain.queue.model.Queue.trackExpenses"]},{"name":"var user: User? = null","description":"com.innopolis.innoqueue.domain.notification.model.Notification.user","location":"innoqueue/com.innopolis.innoqueue.domain.notification.model/-notification/user.html","searchKeys":["user","var user: User? = null","com.innopolis.innoqueue.domain.notification.model.Notification.user"]},{"name":"var userId: Long? = null","description":"com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.userId","location":"innoqueue/com.innopolis.innoqueue.domain.fcmtoken.model/-fcm-token-id/user-id.html","searchKeys":["userId","var userId: Long? = null","com.innopolis.innoqueue.domain.fcmtoken.model.FcmTokenId.userId"]},{"name":"var userId: Long? = null","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.userId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue-id/user-id.html","searchKeys":["userId","var userId: Long? = null","com.innopolis.innoqueue.domain.userqueue.model.UserQueueId.userId"]},{"name":"var userQueueId: UserQueueId? = null","description":"com.innopolis.innoqueue.domain.userqueue.model.UserQueue.userQueueId","location":"innoqueue/com.innopolis.innoqueue.domain.userqueue.model/-user-queue/user-queue-id.html","searchKeys":["userQueueId","var userQueueId: UserQueueId? = null","com.innopolis.innoqueue.domain.userqueue.model.UserQueue.userQueueId"]},{"name":"var yourTurn: Boolean? = true","description":"com.innopolis.innoqueue.domain.user.model.User.yourTurn","location":"innoqueue/com.innopolis.innoqueue.domain.user.model/-user/your-turn.html","searchKeys":["yourTurn","var yourTurn: Boolean? = true","com.innopolis.innoqueue.domain.user.model.User.yourTurn"]}]
